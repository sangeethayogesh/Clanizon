{"version":3,"sources":["models/auth-model.js","constants/index.js","services/http.js","models/broadcast-message-model.js","models/usersModel.js","models/index.js","models/lead-model.js","models/agent-model.js","models/asset-model.js","components/HeaderBar.js","components/AddPlot.js","components/AddAgent.js","screens/admin/Home.js","components/CategoryTile.js","components/ReportCard.js","components/LoadMore.js","components/TimeLineView.js","components/UserInfoView.js","screens/admin/OverallProductReport.js","components/AddArea.js","screens/admin/AddPlotArea.js","components/LeadTable.js","components/AgentMessageCard.js","components/OverViewCard.js","screens/agent/Home.js","components/SubNavBar.js","components/LeadPersonalCard.js","components/OverallCallStatus.js","screens/agent/OverAll.js","screens/agent/AddLead.js","components/DetailedLeadList.js","screens/agent/LeadList.js","screens/Login.js","screens/auth/PrivateRoute.js","components/Property/FlatLists.js","components/Property/FlatForm.js","components/Property/FlatEditForm.js","components/FileUpload.js","utils/s3.js","components/SubNavProperty.js","screens/admin/Property.js","components/FlatListTable.js","screens/agent/AreaList.js","App.js","serviceWorker.js","index.js"],"names":["authModel","persist","user","isLoggedIn","computed","state","setUser","action","payload","unsetUser","constants","URL","GET_ADMIN_MESSAGES","NAME_SPACE","GET_TODAY_LEADS","Date","toISOString","split","GET_ALL_AGENTS","ADD_NEW_AGENT","ADD_NEW_LEAD","GET_LEAD_STATUS_COUNT","ADD_NEW_AUDIT","GET_LEAD_BY_AGENT","LOGIN","GET_ASSET_GROUPS","ADD_IMAGE_TO_ASSET_GROUP","LIST_GROUP_IMAGE","ADD_NEW_GROUP","GET_ASSET_BY_GROUP_ID","ADD_ASSET","DATA","admin_messages","message","createdAt","currentAgent","mobile","auditStatus","auditStatusId","getLeadStatusById","id","rest","Axios","create","timeout","headers","broadCastMeassageModel","messages","total","length","setMessages","unsetMessages","getMessages","thunk","actions","callback","a","get","then","res","data","catch","err","console","error","usersModel","getUsers","users","GET_USERS","models","auth","broadCastMeassages","leads","today_leads","allLeads","leadsByAgent","statusCount","created","prospecting","closer","completed","setTodayLeads","unsetTodayLeads","getTodayLeads","url","setAllLeads","unsetAllLeads","addLead","push","getLeadStatusCount","setLeadStatusCount","filter","category","closure","count","log","getLeadsByAgent","setLeadsByAgent","agents","list","setAgent","unsetAgent","getAllAgents","addNewAgent","assets","assetGroups","assetDetails","setGroup","setAsset","addAsset","updateAsset","i","findIndex","asset","assetId","unsetGroup","addNewGroup","getAssetGroups","getAssetById","Option","Header","Sider","Content","HeaderBar","props","useState","messageValue","setMessageValue","currentUser","useStoreState","useStoreActions","visible","setVisible","history","useHistory","style","backgroundColor","position","zIndex","width","paddingRight","justify","span","HomeOutlined","className","color","padding","textAlign","MenuOutlined","dot","NotificationOutlined","UserOutlined","userFname","type","icon","PoweroffOutlined","onClick","replace","placement","closable","onClose","footer","name","onChange","value","height","borderRadius","border","map","idx","key","String","concat","time","SendOutlined","transform","fontSize","right","bottom","top","date","minPeriod","live","drawer","overflow","left","display","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","Item","to","userRole","DatabaseOutlined","BuildOutlined","children","marginTop","minHeight","marginLeft","layout","labelCol","wrapperCol","tailLayout","offset","AddPlot","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","autoComplete","colon","label","rules","required","placeholder","hasFeedback","htmlType","margin","AddAgent","useForm","form","isLoading","setIsLoading","agent","userPassword","userMobile","userMobileAlt","post","success","resetFields","doClose","pattern","TextArea","loading","disabled","UserHome","agentList","visibleAddAgent","setVisibleAddAgent","visibleAddNewPlot","setVisibleAddNewPlot","setLoading","useEffect","toggleAddAgent","columns","title","render","userSname","userEmailid","PlusSquareFilled","userCity","FunnelPlotOutlined","userOccupation","onCancel","centered","dataSource","labels","datasets","barThickness","borderWidth","options","text","legend","CategoryTile","backgroundImage","gradient","ReportCard","lead","gutter","bordered","fontFamily","leadCustomer","slice","leadOutcome","leadAgentMobile","src","float","leadSource","CalendarTwoTone","twoToneColor","LoadMore","shape","DownCircleOutlined","onLoadMore","TimeLineView","paddingTop","UserInfoView","size","column","xxl","xl","lg","md","sm","xs","userCompany","userAddress","nextScheduleDatetime","preferredCallStart","preferredCallEnd","OverallProductReport","visibleDetailedReport","setVisibleDetailedReport","setList","detailed","setDetailed","showModel","getAllLeads","response","leadStatus","converted","processData","params","AddArea","lat","lng","postion","setPosition","clickedLocation","setClickedLocation","addAssetGroup","listOfGroups","assetGroupLat","assetGroupLong","addAreaVisible","setAddAreaVisible","onCancelModel","okText","assetGroupPlan","assetGroupGlink","assetGroupTypeId","addArea","warning","Map","center","zoom","onclick","e","latlng","setFieldsValue","animate","TileLayer","attribution","group","Marker","index","pathname","groupDetails","onClickMarker","onMouseOver","target","openTooltip","Tooltip","assetGroupName","AddPlotArea","LeadTable","todayLeads","store","tableColumns","fontWeight","score","outCome","SmileTwoTone","dataIndex","leadDetail","item","ellipsis","pagination","pageSize","scroll","y","relativeTime","require","dayjs","extend","AgentMessageCard","fromNow","OverViewCard","showbutton","AgentHome","adminMessages","leadStatusCount","autoplay","dotPosition","msg","SubNavBar","ghost","onBack","window","back","extra","Text","LeadPersonalCard","source","Panel","OverallCallStatus","status","leadAsset","leadAssetList","leaditem","leadItemAssetId","leadAuditCreatedUser","leadAuditScheduleDatetime","$d","undefined","leadAuditLeadId","leadId","leadItem","leadAuditCreatedDatetime","defaultActiveKey","expandIconPosition","expandIcon","header","format","defaultValue","Group","Button","goBack","OverAll","location","RangePicker","AddLead","today","tomorrow","setDate","getDate","groups","setGroups","properties","setProperties","ArrowLeftOutlined","best_call_time","toTimeString","leadList","request","leadInterest","leadCreateDate","minuteStep","use12Hours","assetGroupId","assetNumber","paddingBottom","block","DetailedLeadList","LeadList","LoginForm","setCurrentUser","headStyle","warn","prefix","LockOutlined","href","PrivateRoute","Component","component","FlatLists","onFlatClick","getAssetByGroupId","assetList","spinning","assetStatus","assetStatusId","TabPane","FlatForm","cStatus","setCStatus","assestStatus","tab","FlatEditForm","flat","onSuccess","valueUnit","setValueUnit","assetValueUnit","bookingStatus","assetDimen","assetValue","assetFacing","FileUpload","hiddenFileInput","React","useRef","event","current","click","ref","fileUploaded","files","handleFile","s3","S3","bucketName","dirName","region","accessKeyId","secretAccessKey","SubNavProperty","successFiles","setSuccessFiles","showUploadModal","setShowUploadModal","file","alt","docurl","dashed","isJpgOrPng","isLt2M","beforeUpload","fname","getTime","uploadFile","uploaddocrequest","docTypeId","Property","flatForEdit","setFlatForEdit","FlatListTable","AreaList","selectedId","setSelectedId","storeModel","createStore","AppRouter","exact","path","AdminHome","App","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.debc6da4.chunk.js","sourcesContent":["import { action, computed, persist } from 'easy-peasy'\n\nconst authModel = persist({\n  user: null,\n  isLoggedIn: computed(state => state.user != null),\n  setUser: action((state, payload) => {\n    state.user = payload\n  }),\n  unsetUser: action((state, payload) => {\n    state.user = null\n  })\n  // count: computed(state => state.productIds.length),\n})\n\nexport default authModel\n","/* eslint-disable no-unused-vars */\nconst BASE_URL = 'localhost:8080/api/'\nconst NAME_SPACE = 'api/'\nconst today = new Date().toISOString().split('T')[0]\nconst constants = {\n  URL: {\n    GET_ADMIN_MESSAGES: NAME_SPACE + 'admin_messages',\n    GET_TODAY_LEADS:\n      'http://realkeyip.in:8083/api/leads/leadbyagentanddate?date=' + today,\n    GET_ALL_AGENTS: 'http://realkeyip.in:8083//api/user/userbyrole?roleId=2',\n    ADD_NEW_AGENT: 'http://realkeyip.in:8083//api/user/createuser',\n    ADD_NEW_LEAD: 'http://realkeyip.in:8083/api/leads/createlead',\n    GET_LEAD_STATUS_COUNT: 'http://realkeyip.in:8083/api/leads/leadbystatus',\n    ADD_NEW_AUDIT: 'http://realkeyip.in:8083/api/leads/leadaudit',\n    GET_LEAD_BY_AGENT: 'http://realkeyip.in:8083/api/leads/leadbyagent',\n    LOGIN: 'http://realkeyip.in:8083/api/user/login',\n    GET_ASSET_GROUPS: 'http://realkeyip.in:8083/api/asset/listAssetGroup',\n    ADD_IMAGE_TO_ASSET_GROUP:'http://realkeyip.in:8083/api/documents/adddocument',\n    LIST_GROUP_IMAGE:'http://realkeyip.in:8083/api/documents/listdocumentbygroup?groupId=',\n    ADD_NEW_GROUP: 'http://realkeyip.in:8083/api/asset/addgroup',\n    GET_ASSET_BY_GROUP_ID:\n      'http://realkeyip.in:8083/api/asset/listAssetByGroupId',\n    ADD_ASSET: 'http://realkeyip.in:8083/api/asset/addAsset'\n  },\n  DATA: {\n    admin_messages: [\n      { message: 'hello new plot added on madurai', createdAt: new Date() },\n      { message: 'hello new plot added on chennai', createdAt: new Date() }\n    ]\n  },\n  currentAgent: {\n    mobile: '8122723731'\n  },\n  auditStatus: [\n    {\n      auditStatusId: 1,\n      auditStatus: 'ScheduledCall'\n    },\n    {\n      auditStatusId: 2,\n      auditStatus: 'Created'\n    },\n    {\n      auditStatusId: 3,\n      auditStatus: 'DealClose'\n    },\n    {\n      auditStatusId: 4,\n      auditStatus: 'SiteVisited'\n    }\n  ],\n  getLeadStatusById: (id) => {\n    if (id == 1) return 'Created'\n    else if (id == 2) return 'Prospecting'\n    else if (id == 3) return 'Closure'\n    else if (id == 4) return 'Converted'\n    else if (id == 5) return 'Completed'\n  }\n}\n\nexport default constants\n","import Axios from 'axios'\nconst rest = Axios.create({\n  timeout: 50000,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n  }\n})\n\nexport default rest\n","import { action, computed, thunk } from 'easy-peasy'\nimport constants from '../constants'\nimport rest from '../services/http'\n\nconst broadCastMeassageModel = {\n  messages: [],\n  total: computed(state => state.messages.length),\n  setMessages: action((state, payload) => {\n    state.messages = payload\n  }),\n  unsetMessages: action((state, payload) => {\n    state.messages = []\n  }),\n  getMessages: thunk(async (actions, callback) => {\n    actions.setMessages([])\n    rest.get(constants.URL.GET_ADMIN_MESSAGES)\n      .then((res) => {\n        actions.setMessages(res.data)\n        callback()\n      }).catch((err) => {\n        console.error(err)\n      })\n  })\n  // count: computed(state => state.productIds.length),\n}\n\nexport default broadCastMeassageModel\n","import { action, thunk } from 'easy-peasy'\nimport rest from 'services/http'\nimport constants from '../constants'\n\nconst usersModel = {\n  user: null,\n\n  setUser: action((state, payload) => {\n    state.user = payload\n  }),\n  unsetUser: action((state, payload) => {\n    state.user = null\n  }),\n  getUsers: thunk(async (actions, callback) => {\n    actions.users([])\n    rest\n      .get(constants.URL.GET_USERS)\n      .then((res) => {\n        actions.setUser(res.data)\n        callback()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  })\n  // count: computed(state => state.productIds.length),\n}\n\nexport default usersModel\n","import authModel from './auth-model'\nimport broadCastMeassageModel from './broadcast-message-model'\nimport usersModel from './usersModel'\nimport leads from './lead-model.js'\nimport agentModel from './agent-model'\nimport assetModel from './asset-model'\nconst models = {\n  auth: authModel,\n  broadCastMeassages: broadCastMeassageModel,\n  users: usersModel,\n  leads: leads,\n  agents: agentModel,\n  assets: assetModel\n}\n\nexport default models\n","import { action, computed, thunk } from 'easy-peasy'\nimport rest from '../services/http'\nimport { message } from 'antd'\nconst leads = {\n  today_leads: [],\n  allLeads: [],\n  leadsByAgent: [],\n  statusCount: {\n    created: 0,\n    prospecting: 0,\n    closer: 0,\n    completed: 0\n  },\n  total: computed((state) => state.today_leads.length),\n  setTodayLeads: action((state, payload) => {\n    state.today_leads = payload\n  }),\n  unsetTodayLeads: action((state, payload) => {\n    state.today_leads = []\n  }),\n  getTodayLeads: thunk(async (actions, data) => {\n    actions.setTodayLeads([])\n    rest\n      .get(data.url)\n      .then((res) => {\n        // const data = res.data.map((item) => ({\n        //   ...item,\n        //   next_schedule: '10:30AM'\n        // }))\n        actions.setTodayLeads(res.data)\n        data.callback()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }),\n  setAllLeads: action((state, payload) => {\n    state.allLeads = payload\n  }),\n  unsetAllLeads: action((state, payload) => {\n    state.allLeads = []\n  }),\n  addLead: action((state, payload) => {\n    state.allLeads.push(payload)\n  }),\n  getLeadStatusCount: thunk(async (actions, url) => {\n    rest\n      .get(url)\n      .then((res) => {\n        actions.setLeadStatusCount(res.data)\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error('Failed loading status count!')\n      })\n  }),\n  setLeadStatusCount: action((state, payload) => {\n    const created = payload.filter((leads) => leads.category == 'Created')\n    const prospecting = payload.filter(\n      (leads) => leads.category == 'Prospecting'\n    )\n    const closure = payload.filter((leads) => leads.category == 'Closure')\n    const completed = payload.filter((leads) => leads.category == 'Completed')\n    state.statusCount = {\n      created: created[0] ? created[0].count : 0,\n      prospecting: prospecting[0] ? prospecting[0].count : 0,\n      closure: closure[0] ? closure[0].count : 0,\n      completed: completed[0] ? completed[0].count : 0\n    }\n    console.log(state.statusCount)\n  }),\n  getLeadsByAgent: thunk(async (actions, data) => {\n    rest\n      .get(data.url)\n      .then((res) => {\n        actions.setLeadsByAgent(res.data)\n        data.callback()\n      })\n      .catch((err) => {\n        console.error(err)\n        message.error('Failed loading leads!')\n      })\n  }),\n  setLeadsByAgent: action((state, payload) => {\n    state.leadsByAgent = payload\n  })\n  // count: computed(state => state.productIds.length),\n}\n\nexport default leads\n","import { action, thunk } from 'easy-peasy'\nimport rest from 'services/http'\nimport constants from '../constants'\nimport { message } from 'antd'\n\nconst agentModel = {\n  list: null,\n\n  setAgent: action((state, payload) => {\n    state.list = payload\n  }),\n  unsetAgent: action((state, payload) => {\n    state.list = null\n  }),\n  getAllAgents: thunk(async (actions, callback) => {\n    actions.setAgent([])\n    rest\n      .get(constants.URL.GET_ALL_AGENTS)\n      .then((res) => {\n        actions.setAgent(res.data)\n        callback()\n      })\n      .catch((err) => {\n        message.error('Agent loading failed')\n        console.error(err)\n      })\n  }),\n  addNewAgent: action((state, payload) => {\n    state.list.push(payload)\n  })\n  // count: computed(state => state.productIds.length),\n}\n\nexport default agentModel\n","import { action, thunk } from 'easy-peasy'\nimport rest from 'services/http'\nimport constants from '../constants'\n\nconst assetModel = {\n  assetGroups: null,\n  assetDetails: null,\n  setGroup: action((state, payload) => {\n    state.assetGroups = payload\n  }),\n  setAsset: action((state, payload) => {\n    state.assetDetails = payload\n  }),\n  addAsset: action((state, payload) => {\n    state.assetDetails.push(payload)\n  }),\n  updateAsset: action((state, payload) => {\n    var i = state.assetDetails.findIndex(\n      (asset) => asset.assetId === payload.assetId\n    )\n    state.assetDetails[i] = payload\n  }),\n  unsetGroup: action((state, payload) => {\n    state.assetGroups = null\n  }),\n  addNewGroup: action((state, payload) => {\n    state.assetGroups.push(payload)\n  }),\n  getAssetGroups: thunk(async (actions, callback) => {\n    rest\n      .get(constants.URL.GET_ASSET_GROUPS)\n      .then((res) => {\n        actions.setGroup(res.data)\n        callback()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  }),\n  getAssetById: thunk(async (actions, data) => {\n    rest\n      .get(constants.URL.GET_ASSET_BY_GROUP_ID + '?groupId=' + data.id)\n      .then((res) => {\n        actions.setAsset(res.data)\n        data.callback()\n      })\n      .catch((err) => {\n        console.error(err)\n      })\n  })\n  // count: computed(state => state.productIds.length),\n}\n\nexport default assetModel\n","import React, { useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport {\n  Layout,\n  Row,\n  Col,\n  Menu,\n  BackTop,\n  Badge,\n  Drawer,\n  Button,\n  Mentions,\n  Divider\n} from 'antd'\nimport TimeAgo from 'react-timeago'\nimport {\n  HomeOutlined,\n  MenuOutlined,\n  NotificationOutlined,\n  UserOutlined,\n  DatabaseOutlined,\n  BuildOutlined,\n  PoweroffOutlined,\n  SendOutlined\n} from '@ant-design/icons'\nimport Text from 'antd/lib/typography/Text'\nimport '../styles/common.css'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\n\nconst { Option } = Mentions\nconst { Header, Sider, Content } = Layout\nfunction HeaderBar(props) {\n  const [users, setUsers] = useState([\n    'Deepan',\n    'Aswath',\n    'Gunalan',\n    'Krishnaveni'\n  ])\n  const [messageValue, setMessageValue] = useState('')\n  const [messages, setMessages] = useState([])\n  const userName = 'Deepan'\n  const currentUser = useStoreState((state) => state.auth.user)\n  const setUser = useStoreActions((actions) => actions.auth.setUser)\n  const [visible, setVisible] = useState(false)\n  const history = useHistory()\n  const onClose = () => {\n    setVisible(false)\n  }\n  const logOut = () => {\n    setUser(null)\n    history.replace('/login')\n  }\n  const sendMessage = () => {\n    setMessageValue('')\n    setMessages(messages.concat([{ messageValue, time: +new Date() }]))\n  }\n  const handleChange = (message) => {\n    setMessageValue(message)\n  }\n  return users.length ? (\n    <div style={{ backgroundColor: '#f0f1f4' }}>\n      <Layout>\n        <Header\n          style={{\n            position: 'fixed',\n            zIndex: 1,\n            width: '100%',\n            paddingRight: 0\n          }}\n        >\n          <Row justify=\"left\">\n            <Col span=\"19\">\n              <HomeOutlined className=\"logo\" style={{ color: '#fff' }} />\n              <span className=\"header-title\" style={{ padding: '1em' }}>\n                &nbsp;CRM\n              </span>\n            </Col>\n            <Col span=\"1\" style={{ textAlign: 'center' }}>\n              <div className=\"divider-left divider-right\">\n                <MenuOutlined className=\"header-menu\" />\n              </div>\n            </Col>\n            {/* <Col span=\"1\" style={{ textAlign: 'center' }}>\n              <div className=\"divider-right\">\n                <MessageOutlined className=\"header-menu\" onClick={showDrawer} />\n              </div>\n            </Col> */}\n            <Col span=\"1\" style={{ textAlign: 'center' }}>\n              <div className=\"divider-right\">\n                <Badge dot>\n                  <NotificationOutlined className=\"header-menu\" />\n                </Badge>\n              </div>\n            </Col>\n            <Col span=\"2\" style={{ textAlign: 'center' }}>\n              <div className=\"divider-right\">\n                <UserOutlined className=\"header-menu\" />\n                &nbsp;\n                <Text>{currentUser.userFname}</Text>\n              </div>\n            </Col>\n            <Col span=\"1\" style={{ textAlign: 'center' }}>\n              <Button\n                type=\"link\"\n                icon={<PoweroffOutlined className=\"header-menu\" />}\n                onClick={logOut}\n              ></Button>\n            </Col>\n          </Row>\n        </Header>\n        <Drawer\n          placement=\"right\"\n          width=\"310px\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n          footer={\n            <div>\n              <Row>\n                <Col span=\"17\">\n                  <Mentions\n                    name=\"messageBox\"\n                    onChange={handleChange}\n                    value={messageValue}\n                    style={{\n                      width: '100%',\n                      height: '40px',\n                      borderRadius: '4px',\n                      border: 'solid 1px #eae9e9'\n                    }}\n                  >\n                    {users.map((user, idx) => {\n                      return (\n                        <Option value={user} key={String(idx)}>\n                          {user}\n                        </Option>\n                      )\n                    })}\n                  </Mentions>\n                </Col>\n                <Col span=\"3\"></Col>\n                <Col span=\"2\">\n                  <Button\n                    onClick={sendMessage}\n                    style={{\n                      width: '40px',\n                      height: '40px',\n                      borderRadius: '4px',\n                      backgroundColor: '#feae2e'\n                    }}\n                  >\n                    <SendOutlined\n                      style={{\n                        transform: 'rotate(-30deg)',\n                        color: 'white',\n                        fontSize: '25px',\n                        position: 'absolute',\n                        right: '1px',\n                        bottom: '-6px'\n                      }}\n                    />\n                  </Button>\n                </Col>\n              </Row>\n              <div className=\"message-tile-meta\">Use @ for select agent</div>\n            </div>\n          }\n        >\n          <div\n            style={{\n              position: 'relative',\n              height: 'auto',\n              width: '100%',\n              bottom: '0px'\n            }}\n          >\n            {messages.map((message, idx) => {\n              return (\n                <div className=\"message-tile\" key={idx}>\n                  {message.messageValue}\n                  <Divider\n                    style={{\n                      backgroundColor: '#ccc9c9',\n                      top: '20px'\n                    }}\n                  />\n                  <Row>\n                    <Col span=\"15\" className=\"message-tile-meta\">\n                      {userName}\n                    </Col>\n                    <Col span=\"auto\"></Col>\n                    <Col span=\"8\" className=\"message-tile-meta\">\n                      <TimeAgo date={message.time} minPeriod={10} live={true} />\n                    </Col>\n                  </Row>\n                </div>\n              )\n            })}\n          </div>\n        </Drawer>\n        <Layout>\n          <Sider\n            width={props.drawer === false ? 'none' : true}\n            style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n              top: '4rem',\n              display: props.drawer === false ? 'none' : true\n            }}\n            className=\"site-layout-background\"\n          >\n            <Menu\n              mode=\"inline\"\n              defaultSelectedKeys={['1']}\n              defaultOpenKeys={['sub1']}\n              style={{ height: '100%', borderRight: 0 }}\n            >\n              <Menu.Item key=\"1\" className=\"sidemenu\">\n                <Link to={currentUser.userRole == '1' ? '/admin' : '/agent'}>\n                  <HomeOutlined className=\"menuitem\" />\n                </Link>\n              </Menu.Item>\n              <Menu.Item key=\"2\" className=\"sidemenu\">\n                <Link\n                  to={\n                    currentUser.userRole == '1'\n                      ? '/admin/overall-product-report'\n                      : '/agent/leads'\n                  }\n                >\n                  <DatabaseOutlined className=\"menuitem\" />\n                </Link>\n              </Menu.Item>\n              {/* <Menu.Item key=\"3\" className=\"sidemenu\">\n                <Link\n                  to={\n                    currentUser.userRole == '1'\n                      ? '/admin/add-plot-area'\n                      : '/agent/leads'\n                  }\n                >\n                  <DatabaseOutlined className=\"menuitem\" />\n                </Link>\n              </Menu.Item> */}\n              {currentUser.userRole == '2' && (\n                <Menu.Item key=\"3\" className=\"sidemenu\">\n                  <Link to={'/agent/area-list'}>\n                    <BuildOutlined className=\"menuitem\" />\n                  </Link>\n                </Menu.Item>\n              )}\n            </Menu>\n          </Sider>\n          {/* if drawer is not needed then making the body as a full width content in order to modify it */}\n          {props.drawer === false ? (\n            <Layout>\n              <Content className=\"site-layout-background\">\n                <BackTop />\n                {props.children}\n              </Content>\n            </Layout>\n          ) : (\n            <Layout style={{ padding: '1rem 1rem 1rem' }}>\n              <Content\n                className=\"site-layout-background\"\n                style={{\n                  marginTop: 64,\n                  minHeight: '100vh',\n                  marginLeft: '5rem'\n                }}\n              >\n                <BackTop />\n                {props.children}\n              </Content>\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    </div>\n  ) : (\n    <div>Loading...</div>\n  )\n}\n\nexport default HeaderBar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Input, Button, Select } from 'antd'\nimport '../styles/common.css'\nimport '../styles/add-agent.css'\nconst { Option } = Select\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n}\n\nconst AddPlot = props => {\n  const onFinish = values => {\n    console.log('Success:', values)\n  }\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo)\n  }\n  return (\n    <div >\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true\n        }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"false\"\n      >\n        <Form.Item\n          colon={false}\n          label=\"Property name\"\n          name=\"property_name\"\n          rules={[\n\n            {\n              required: true,\n              message: 'Please enter the name of the property!'\n            }\n\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          colon={false}\n          label=\"Address\"\n          name=\"address\"\n          rules={[\n\n            {\n              required: true,\n              message: 'Please enter the address of the property'\n            }\n\n          ]}\n        >\n          <Input placeholder=\"13/xxx,ttyuuu\"/>\n        </Form.Item>\n        <Form.Item\n          colon={false}\n          label=\"Property Value (sq.ft)\"\n          name=\"property_value\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter property value'\n            }\n          ]}\n        >\n          <Input placeholder=\"1570\"/>\n        </Form.Item>\n\n        <Form.Item\n          colon={false}\n          label=\"Location\"\n          name=\"Location\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter location'\n            }\n          ]}\n        >\n          <Input placeholder=\"https://www.google.com/maps/place/\"/>\n        </Form.Item>\n\n        <Form.Item\n          colon={false}\n          label=\"Land Value / Sq.Ft ( Rs. )\"\n          name=\"land_value\"\n          rules={[\n            {\n              required: true,\n              message: 'Please enter land value'\n            }\n          ]}\n        >\n          <Input placeholder=\"1700\"/>\n        </Form.Item>\n\n        <Form.Item\n          name=\"select\"\n          label=\"Select\"\n          hasFeedback\n          rules={[\n            {\n              required: true,\n              message: 'Please select the plot type!'\n            }\n          ]}\n        >\n          <Select placeholder=\"Residential Plot\">\n            <Option value=\"resident\">Residential plot</Option>\n            <Option value=\"commercial\">Commercial plot</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n        Save\n          </Button>\n          <Button htmlType=\"button\" style={{ margin: '0 8px' }} >\n              Cancel\n          </Button>\n        </Form.Item>\n\n      </Form>\n    </div>\n  )\n}\n\nAddPlot.propTypes = {\n  onClick: PropTypes.func\n}\n\nexport { AddPlot }\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, Input, Button, Select, message } from 'antd'\nimport '../styles/common.css'\nimport '../styles/add-agent.css'\nimport constants from '../constants'\nimport { useStoreActions } from 'easy-peasy'\nimport rest from 'services/http'\nconst { Option } = Select\nconst layout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 18\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n}\n\nconst AddAgent = (props) => {\n  const [form] = Form.useForm()\n  const [isLoading, setIsLoading] = useState(false)\n  const addNewAgent = useStoreActions((actions) => actions.agents.addNewAgent)\n\n  const onFinish = (values) => {\n    console.log('Success:', values)\n    const data = values\n    data.agent.userPassword = data.agent.userMobile\n    data.agent.userMobileAlt = data.agent.userMobileAlt\n      ? data.agent.userMobileAlt\n      : '0123456789'\n    data.agent.userRole = 2\n    setIsLoading(true)\n    rest\n      .post(constants.URL.ADD_NEW_AGENT, data.agent)\n      .then((res) => {\n        addNewAgent(res.data)\n        message.success('Agent Added')\n        setIsLoading(false)\n        form.resetFields()\n        props.doClose()\n      })\n      .catch((err) => {\n        message.error('Failed!')\n        console.error(err)\n        setIsLoading(false)\n      })\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  const reset = () => {\n    form.resetFields()\n    props.doClose()\n  }\n\n  return (\n    <div>\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true\n        }}\n        form={form}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"new-email\"\n      >\n        <Form.Item\n          colon={false}\n          label=\"First name\"\n          name={['agent', 'userFname']}\n          rules={[\n            {\n              required: true,\n              message: 'Please enter First name!'\n            }\n          ]}\n        >\n          <Input placeholder=\"First Name\" />\n        </Form.Item>\n        <Form.Item\n          colon={false}\n          label=\"Second name\"\n          name={['agent', 'userSname']}\n        >\n          <Input placeholder=\"Second Name\" />\n        </Form.Item>\n        <Form.Item\n          colon={false}\n          label=\"Agent Email\"\n          name={['agent', 'userEmailid']}\n        >\n          <Input placeholder=\"E-mail\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Mobile Number\"\n          name={['agent', 'userMobile']}\n          colon={false}\n          rules={[\n            { required: true, message: 'Mobile Number is required' },\n            { pattern: /^\\d{10}$/, message: 'Enter a valid mobile number' }\n          ]}\n        >\n          <Input style={{ width: '50%' }} placeholder=\"Mobile Number\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Alt Mobile Number\"\n          name={['agent', 'userMobileAlt']}\n          colon={false}\n        >\n          <Input\n            style={{ width: '50%' }}\n            placeholder=\"Alternate Mobile Number\"\n          />\n        </Form.Item>\n\n        <Form.Item\n          colon={false}\n          name={['agent', 'userAddress']}\n          label=\"Address\"\n        >\n          <Input.TextArea placeholder=\"Address\"></Input.TextArea>\n        </Form.Item>\n        <Form.Item\n          colon={false}\n          label=\"Occupation\"\n          name={['agent', 'userOccupation']}\n        >\n          <Input placeholder=\"Occupation\" />\n        </Form.Item>\n        <Form.Item colon={false} label=\"City\" name={['agent', 'userCity']}>\n          <Input placeholder=\"City\" />\n        </Form.Item>\n        <Form.Item name={['agent', 'userCountry']} label=\"Country\">\n          <Select placeholder=\"Country\">\n            <Option value=\"India\">India</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            Save\n          </Button>\n          <Button\n            disabled={isLoading}\n            htmlType=\"button\"\n            onClick={() => {\n              reset()\n            }}\n            style={{ margin: '0 8px' }}\n          >\n            Cancel\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nAddAgent.propTypes = {\n  onClick: PropTypes.func\n}\n\nexport { AddAgent }\n","/* eslint-disable react/display-name */\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col, Layout, Modal, Table } from 'antd'\nimport HeaderBar from 'components/HeaderBar'\n\nimport {\n  // HomeOutlined,\n  // ConsoleSqlOutlined,\n  // FileTextOutlined,\n  // UnorderedListOutlined,\n  // MessageOutlined,\n  PlusSquareFilled,\n  FunnelPlotOutlined\n} from '@ant-design/icons'\nimport { AddPlot } from 'components/AddPlot'\nimport { AddAgent } from 'components/AddAgent'\nimport { Bar } from 'react-chartjs-2'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { useHistory } from 'react-router-dom'\n\n// import { UserOutlined, LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\n// const { SubMenu } = Menu;\nconst { Content } = Layout\n\nconst UserHome = () => {\n  const history = useHistory()\n  const getAllAgents = useStoreActions((actions) => actions.agents.getAllAgents)\n  const agentList = useStoreState((state) => state.agents.list)\n  const [visibleAddAgent, setVisibleAddAgent] = useState(false)\n  const [visibleAddNewPlot, setVisibleAddNewPlot] = useState(false)\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    setLoading(true)\n    getAllAgents(() => {\n      setLoading(false)\n    })\n  }, [])\n  const toggleAddNewPlot = () => {\n    setVisibleAddNewPlot(!visibleAddNewPlot)\n  }\n\n  const toggleAddAgent = () => {\n    console.log('Cancel agent model')\n    setVisibleAddAgent(!visibleAddAgent)\n  }\n\n  const state = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        backgroundColor: '#7e31ed',\n        // borderColor: 'rgba(0,0,0,1)',\n        label: 'performance',\n        barThickness: 20,\n        borderWidth: 2,\n        data: [65, 59, 80, 81, 56, 100, 90]\n      }\n    ]\n  }\n\n  const columns = [\n    {\n      title: 'Agents',\n      key: 'name',\n      render: (agent) => (\n        <span>{agent.userFname}</span>\n        // <div>\n        //   <span className=\"table-name\">\n        //     <span className=\"table-inner-name\">{record.name}</span>\n        //     <br />\n        //     {/* <span className=\"table-designation\">{record.designation}</span> */}\n        //   </span>\n        // </div>\n      )\n    },\n    {\n      key: 'secondname',\n      render: (agent) => (agent.userSname ? agent.userSname : '')\n    },\n    {\n      key: 'mobile',\n      render: (agent) => agent.userMobile\n    },\n\n    {\n      key: 'email',\n      render: (agent) => (\n        <span className=\"table-email\">{agent.userEmailid}</span>\n      )\n    },\n    {\n      title: (\n        <PlusSquareFilled\n          className=\"table-icon\"\n          style={{\n            fontSize: '20px'\n          }}\n          onClick={toggleAddAgent}\n        />\n      ),\n      key: 'city',\n      render: (agent) => agent.userCity\n    },\n    {\n      title: (\n        <FunnelPlotOutlined\n          style={{\n            fontSize: '20px'\n          }}\n        />\n      ),\n      key: 'role',\n      render: (agent) => agent.userOccupation\n    }\n  ]\n  // const addNewPlot = () => {\n  //   setNewPlot(!newPlot)\n  // }\n  return (\n    <Layout>\n      <HeaderBar>\n        <Layout>\n          {/* <Sider width={80} className=\"site-layout-background\">\n              <Menu\n                mode=\"inline\"\n                defaultSelectedKeys={['1']}\n                defaultOpenKeys={['sub1']}\n                style={{ height: '100%', borderRight: 0 }}\n              >\n                <Menu.Item key=\"1\" className=\"sidemenu\">\n                  <ConsoleSqlOutlined className=\"menuitem\"/>\n                </Menu.Item>\n                <Menu.Item key=\"2\" className=\"sidemenu\">\n                  <FileTextOutlined className=\"menuitem\"/>\n                </Menu.Item>\n                <Menu.Item key=\"3\" className=\"sidemenu\">\n                  <UnorderedListOutlined className=\"menuitem\"/>\n                </Menu.Item>\n\n              </Menu>\n            </Sider> */}\n          <Layout>\n            {/* <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n              <Breadcrumb.Item>List</Breadcrumb.Item>\n              <Breadcrumb.Item>App</Breadcrumb.Item>\n            </Breadcrumb> */}\n            <Content\n              className=\"site-layout-background\"\n              style={{\n                margin: 0,\n                minHeight: '100vh'\n              }}\n            >\n              <div className=\"rectangle\">\n                <div\n                  style={{\n                    padding: '1rem'\n                  }}\n                >\n                  <div className=\"body-header\">Welcome back Admin</div>\n                  <div className=\"body-content\" style={{ fontSize: '14px' }}>\n                    You’ve earned 80% in this week ! Keep it up and improve your\n                    goals Lorem Ipsum is simply dummy text of the printing and\n                    typesetting industry.\n                  </div>\n                </div>\n              </div>\n              <Modal\n                visible={visibleAddNewPlot}\n                title=\"Add new plot\"\n                onCancel={() => toggleAddNewPlot()}\n                footer={null}\n                width=\"40%\"\n                centered\n              >\n                <AddPlot />\n              </Modal>\n              <Modal\n                visible={visibleAddAgent}\n                title=\"Add new agent\"\n                onCancel={() => toggleAddAgent()}\n                footer={null}\n                width=\"40%\"\n                centered\n              >\n                <AddAgent doClose={() => toggleAddAgent()} />\n              </Modal>\n              <Row justify=\"left\">\n                <Col span=\"8\">\n                  <div\n                    className=\"box-content\"\n                    style={{\n                      backgroundColor: '#7571c7'\n                    }}\n                  >\n                    <Row justify=\"left\">\n                      <Col span=\"6\">\n                        <div className=\"letter-box\">\n                          <span className=\"letter\">N</span>\n                        </div>\n                      </Col>\n                      <Col span=\"6\">\n                        <span className=\"count\">198</span>\n                        <span className=\"count-desc\"> New plots added</span>\n                      </Col>\n                    </Row>\n                    <div className=\"oval\"></div>\n                    <div className=\"small-oval\"></div>\n                    <button\n                      className=\"box-button\"\n                      onClick={() => history.push('/admin/add-plot-area')}\n                    >\n                      {' '}\n                      + Add Plot\n                    </button>\n                  </div>\n                </Col>\n                <Col span=\"8\">\n                  <div\n                    className=\"box-content\"\n                    style={{\n                      backgroundColor: '#5dca88'\n                    }}\n                  >\n                    <Row>\n                      <Col span=\"6\">\n                        <div className=\"letter-box\">\n                          <span className=\"letter\">A</span>\n                        </div>\n                      </Col>\n                      <Col span=\"6\">\n                        <span className=\"count\">256</span>\n                        <span className=\"count-desc\">Available Plots</span>\n                      </Col>\n                    </Row>\n                    <div className=\"oval\"></div>\n                    <div className=\"small-oval\"></div>\n                  </div>\n                </Col>\n                <Col span=\"8\">\n                  <div\n                    className=\"box-content\"\n                    style={{\n                      backgroundColor: '#ff707c'\n                    }}\n                  >\n                    <Row>\n                      <Col span=\"6\">\n                        <div className=\"letter-box\">\n                          <span className=\"letter\">B</span>\n                        </div>\n                      </Col>\n                      <Col span=\"6\">\n                        <span className=\"count\">198</span>\n                        <span className=\"count-desc\">Booked Plots</span>\n                      </Col>\n                    </Row>\n                    <div className=\"oval\"></div>\n                    <div className=\"small-oval\"></div>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"row-gap\"></div>\n              <Row>\n                <Col span=\"12\">\n                  <div className=\"admin-page-column-left\">\n                    <Table\n                      loading={loading}\n                      dataSource={agentList}\n                      columns={columns}\n                    />\n                  </div>\n                </Col>\n                <Col span=\"12\">\n                  <div className=\"admin-page-column-right\">\n                    <Bar\n                      data={state}\n                      options={{\n                        title: {\n                          display: true,\n                          text: 'Overall Performance',\n                          fontSize: 20\n                        },\n                        legend: {\n                          display: true,\n                          position: 'right'\n                        }\n                      }}\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </Content>\n          </Layout>\n        </Layout>\n        {/* <ChatBox /> */}\n      </HeaderBar>\n    </Layout>\n  )\n}\n\nexport default UserHome\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Row, Col } from 'antd'\nimport '../styles/category-tile.css'\n\nconst CategoryTile = (props) => {\n  return (\n    <div {...props}>\n      <Card\n        style={{\n          backgroundImage:\n            'linear-gradient(100deg, ' +\n            props.gradient[0] +\n            ' -85%, ' +\n            props.gradient[1] +\n            ' 115%)'\n        }}\n        className=\"category-tile\"\n      >\n        <Row>\n          <Col span=\"12\">\n            <span className=\"title\">{props.title}</span>\n          </Col>\n          <Col span=\"12\" style={{ textAlign: 'right' }}>\n            <span className=\"desc\">{props.count} records</span>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  )\n}\n\nCategoryTile.propTypes = {\n  title: PropTypes.string.isRequired,\n  count: PropTypes.any.isRequired,\n  gradient: PropTypes.array\n}\n\nexport { CategoryTile }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Row, Col, Avatar, Button } from 'antd'\nimport { CalendarTwoTone } from '@ant-design/icons'\nimport '../styles/report-card.css'\nimport Text from 'antd/lib/typography/Text'\nconst ReportCard = (props) => {\n  const { lead } = props\n  // const [state, setState] = useState(InitialState);\n  return (\n    <>\n      {lead && (\n        <Card gutter={6} bordered={false} className=\"r-card-box\" {...props}>\n          <Row gutter={6}>\n            <Col>\n              <Avatar\n                style={{\n                  color: '#e13f56',\n                  backgroundColor: '#f9f3ef',\n                  fontFamily: 'Lato'\n                }}\n              >\n                {lead.leadCustomer.userFname.slice(0, 2)}\n              </Avatar>\n            </Col>\n            <Col>\n              <Row>\n                <span className=\"r-user-name\">\n                  {lead.leadCustomer.userFname || ''}\n                </span>\n              </Row>\n              <Row>\n                <span className=\"r-user-status\">\n                  {lead.leadCustomer.userEmailid}\n                </span>\n              </Row>\n            </Col>\n            <Col justify=\"space-between\">\n              <Button type=\"link\" className=\"badge-label badge-label-success\">\n                {lead.leadOutcome ? lead.leadOutcome : 'no status'}\n              </Button>\n            </Col>\n          </Row>\n          <Row gutter={[6, 6]}>\n            <Col span=\"12\">\n              <Text className=\"r-by-code\">\n                {lead.leadCustomer.userCity || '-'}\n              </Text>\n            </Col>\n            <Col span=\"9\">\n              <Text className=\"r-by-name\">{lead.leadAgentMobile}</Text>\n            </Col>\n            <Col span=\"3\">\n              <Avatar\n                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                style={{ float: 'right' }}\n              />\n            </Col>\n          </Row>\n          <Row gutter={[6, 6]}>\n            <Col span=\"12\">\n              <Text className=\"r-source\">{lead.leadSource || '-'}</Text>\n            </Col>\n            <Col span=\"3\">\n              <CalendarTwoTone\n                twoToneColor=\"#bababa\"\n                style={{ float: 'right' }}\n              />\n            </Col>\n            <Col span=\"9\">\n              <Text className=\"r-date no-over-due\">0 days overdue</Text>\n            </Col>\n          </Row>\n        </Card>\n      )}\n    </>\n  )\n}\n\nReportCard.propTypes = {\n  onShowDetailReport: PropTypes.func,\n  onClick: PropTypes.func\n}\n\nexport { ReportCard }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DownCircleOutlined } from '@ant-design/icons'\nimport { Row, Button } from 'antd'\nconst LoadMore = props => {\n// const [state, setState] = useState(InitialState);\n  return (\n    <Row justify=\"center\" style={{ marginTop: '1rem' }}>\n      <Button shape=\"circle\" icon={<DownCircleOutlined/>} onClick={props.onLoadMore()} loading={props.loading}/>\n    </Row>\n  )\n}\n\nLoadMore.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n  loading: PropTypes.bool\n}\n\nexport { LoadMore }\n","import React from 'react'\nimport { Timeline, Layout } from 'antd'\nimport Text from 'antd/lib/typography/Text'\nimport '../styles/timeline.css'\n\nconst TimeLineView = (props) => {\n  return (\n    <Layout.Content style={{ backgroundColor: '#fbfbfb', padding: '1rem' }}>\n      <h6 className=\"t-header-title\">Lead Timeline</h6>\n      <Timeline mode=\"left\" style={{ paddingTop: '0.5rem' }}>\n        <Timeline.Item color=\"green\">\n          <Text className=\"t-title\">Lead Open</Text>\n          <Text className=\"t-sub-title\">20 February 2020</Text>\n          <div className=\"t-desc-area\">\n            <Text className=\"t-line\">Cold call</Text>\n            <Text className=\"t-line\">\n              Intrested to buy. Request for site visit\n            </Text>\n          </div>\n        </Timeline.Item>\n        <Timeline.Item color=\"green\">\n          <Text className=\"t-title\">Lead Open</Text>\n          <Text className=\"t-sub-title\">20 February 2020</Text>\n          <div className=\"t-desc-area\">\n            <Text className=\"t-line\">Cold call</Text>\n            <Text className=\"t-line\">\n              Intrested to buy. Request for site visit\n            </Text>\n          </div>\n        </Timeline.Item>\n        <Timeline.Item color=\"gray\">\n          <Text className=\"t-title\">Lead Open</Text>\n          <Text className=\"t-sub-title\">20 February 2020</Text>\n          <div className=\"t-desc-area\">\n            <Text className=\"t-line\">Cold call</Text>\n            <Text className=\"t-line\">\n              Next scheduled for call on 25 February 2020\n            </Text>\n          </div>\n        </Timeline.Item>\n      </Timeline>\n    </Layout.Content>\n  )\n}\n\nexport { TimeLineView }\n","import React from 'react'\nimport { Descriptions } from 'antd'\n\nconst UserInfoView = (props) => {\n  const { lead } = props\n  return (\n    <>\n      {lead && (\n        <Descriptions\n          size=\"middle\"\n          layout=\"vertical\"\n          column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}\n        >\n          <Descriptions.Item label=\"Lead Name\">\n            {lead.leadCustomer.userFname}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Company\">\n            {lead.leadCustomer.userCompany}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Email\">\n            {lead.leadCustomer.userEmailid}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Industry Type\">~</Descriptions.Item>\n          <Descriptions.Item label=\"Contact Number\">\n            {lead.leadCustomer.userMobile}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Leaf source\">\n            {lead.leadSource}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Alternative Contact number\">\n            {lead.leadCustomer.userMobileAlt}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Lead contact\">\n            {lead.leadAgentMobile}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Address\">\n            {lead.leadCustomer.userAddress}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Intrested  area\">~</Descriptions.Item>\n          <Descriptions.Item label=\"Next schedule date\">\n            {new Date(lead.nextScheduleDatetime).toISOString().split('T')[0]}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Best time to call\">\n            {lead.leadCustomer.preferredCallStart +\n              ' - ' +\n              lead.leadCustomer.preferredCallEnd}\n          </Descriptions.Item>\n        </Descriptions>\n      )}\n    </>\n  )\n}\n\nexport { UserInfoView }\n","/* eslint-disable space-before-function-paren */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react'\nimport { Row, Col, Modal, Avatar, Descriptions, message } from 'antd'\nimport { CategoryTile } from '../../components/CategoryTile'\nimport { ReportCard } from '../../components/ReportCard'\nimport { LoadMore } from '../../components/LoadMore'\nimport HeaderBar from '../../components/HeaderBar'\nimport '../../styles/overall-product-report.css'\nimport { TimeLineView } from '../../components/TimeLineView'\nimport { UserInfoView } from '../../components/UserInfoView'\nimport rest from 'services/http'\nconst OverallProductReport = (props) => {\n  const [visibleDetailedReport, setVisibleDetailedReport] = useState(false)\n  const [visibleAddAgent, setVisibleAddAgent] = useState(true)\n  const [list, setList] = useState(null)\n  const [detailed, setDetailed] = useState(null)\n  function handleCancel(params) {\n    setVisibleDetailedReport(false)\n  }\n  const showModel = (data) => {\n    setDetailed(data)\n    console.log(data)\n    setVisibleDetailedReport(true)\n  }\n  const showAddAgent = () => {\n    setVisibleAddAgent(true)\n  }\n  function processData(data) {\n    const created = data.filter((leads) => leads.leadStatus == 1)\n    const prospecting = data.filter((leads) => leads.leadStatus == 2)\n    const closer = data.filter((leads) => leads.leadStatus == 3)\n    const converted = data.filter((leads) => leads.leadStatus == 4)\n    setList({\n      created: created,\n      prospecting: prospecting,\n      closer: closer,\n      converted: converted\n    })\n    console.log(list)\n  }\n  const getAllLeads = () => {\n    rest\n      .get('http://realkeyip.in:8083/api/leads/getAllLeads')\n      .then((response) => {\n        processData(response.data)\n      })\n      .catch((error) => {\n        console.log(error)\n        message.error('Loading Failed!')\n      })\n  }\n  useEffect(() => {\n    getAllLeads()\n  }, [])\n  return (\n    <HeaderBar>\n      <Row gutter={[24, 16]}>\n        <Col span=\"6\" sm={(6, 6)} xs={24}>\n          <CategoryTile\n            title=\"Created\"\n            count={(list && list.created && list.created.length) || 0}\n            gradient={['#c185fa', '#6a3ec3']}\n            onClick={showAddAgent}\n          ></CategoryTile>\n          {list &&\n            list.created &&\n            list.created.map((lead, idx) => {\n              return (\n                <ReportCard\n                  lead={lead}\n                  key={idx}\n                  onClick={() => showModel(lead)}\n                ></ReportCard>\n              )\n            })}\n\n          <LoadMore onLoadMore={() => {}}></LoadMore>\n        </Col>\n        <Col span=\"6\" sm={6} xs={24}>\n          <CategoryTile\n            title=\"Prospecting\"\n            count={(list && list.prospecting && list.prospecting.length) || 0}\n            gradient={['#efd67c', '#f76b1c']}\n          ></CategoryTile>\n          {list &&\n            list.prospecting &&\n            list.prospecting.map((lead, idx) => {\n              return (\n                <ReportCard\n                  lead={lead}\n                  key={idx}\n                  onClick={() => showModel(lead)}\n                ></ReportCard>\n              )\n            })}\n          <LoadMore onLoadMore={() => {}}></LoadMore>\n        </Col>\n        <Col span=\"6\" sm={6} xs={24}>\n          <CategoryTile\n            title=\"Closure\"\n            count={(list && list.closer && list.closer.length) || 0}\n            gradient={['#b9e270', '#60904d']}\n          ></CategoryTile>\n          {list &&\n            list.closer &&\n            list.closer.map((lead, idx) => {\n              return (\n                <ReportCard\n                  lead={lead}\n                  key={idx}\n                  onClick={() => showModel(lead)}\n                ></ReportCard>\n              )\n            })}\n          <LoadMore onLoadMore={() => {}}></LoadMore>\n        </Col>\n        <Col span=\"6\" sm={6} xs={24}>\n          <CategoryTile\n            title=\"Converted\"\n            count={(list && list.converted && list.converted.length) || 0}\n            gradient={['#ff5878', '#ff5878']}\n          ></CategoryTile>\n          {list &&\n            list.converted &&\n            list.converted.map((lead, idx) => {\n              return (\n                <ReportCard\n                  lead={lead}\n                  key={idx}\n                  onClick={() => showModel(lead)}\n                ></ReportCard>\n              )\n            })}\n          <LoadMore onLoadMore={() => {}}></LoadMore>\n        </Col>\n      </Row>\n      <Modal\n        visible={visibleDetailedReport}\n        title=\"Leads’s detailed report\"\n        onCancel={handleCancel}\n        footer={null}\n        width=\"80%\"\n        centered\n      >\n        <Row>\n          <Col span={1}>\n            <Descriptions>\n              <Descriptions.Item label=\"\">\n                <Avatar\n                  style={{\n                    color: '#e13f56',\n                    backgroundColor: '#f9f3ef',\n                    fontFamily: 'Lato'\n                  }}\n                >\n                  {detailed\n                    ? detailed.leadCustomer.userFname.slice(0, 2)\n                    : 'Is'}\n                </Avatar>\n              </Descriptions.Item>\n            </Descriptions>\n          </Col>\n          <Col span={14}>\n            <UserInfoView lead={detailed} />\n          </Col>\n          <Col span={9} style={{ backgroundColor: '#fbfbfb' }}>\n            <TimeLineView />\n          </Col>\n        </Row>\n      </Modal>\n      {/* <Modal\n        visible={visibleAddAgent}\n        title=\"Add new agent\"\n        onCancel={handleAddAgentCancel}\n        footer={null}\n        width=\"40%\"\n        centered\n      >\n        <AddAgent/>\n      </Modal> */}\n    </HeaderBar>\n  )\n}\n\nOverallProductReport.propTypes = {}\n\nexport default OverallProductReport\n","import React, { useState, useEffect } from 'react'\nimport { Map, TileLayer, Marker, Tooltip } from 'react-leaflet'\nimport { Layout, Modal, message, Input, Form, Button } from 'antd'\nimport rest from 'services/http'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport constants from '../constants'\nimport { useHistory } from 'react-router-dom'\n\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n}\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n}\nconst AddArea = (props) => {\n  const [postion, setPosition] = useState({\n    lat: '13.079436475227778',\n    lng: '80.28259277343751'\n  })\n  const [isLoading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [clickedLocation, setClickedLocation] = useState({})\n  const getAssetGroups = useStoreActions(\n    (actions) => actions.assets.getAssetGroups\n  )\n  const addAssetGroup = useStoreActions((actions) => actions.assets.addNewGroup)\n  const listOfGroups = useStoreState((state) => state.assets.assetGroups)\n\n  const handleMapClick = (e) => {\n    console.log('clicked Location', e.latlng)\n    setClickedLocation(e.latlng)\n    form.setFieldsValue({\n      asset: {\n        assetGroupLat: e.latlng.lat,\n        assetGroupLong: e.latlng.lng\n      }\n    })\n    setAddAreaVisible(true)\n  }\n\n  const onClickMarker = (group, index) => {\n    history.push({ pathname: '/admin/property', groupDetails: group })\n  }\n\n  useEffect(() => {\n    getAssetGroups(() => {\n      setPosition({\n        lat: listOfGroups[0].assetGroupLat,\n        lng: listOfGroups[0].assetGroupLong\n      })\n    })\n  }, [])\n  const [addAreaVisible, setAddAreaVisible] = useState(false)\n  const [files, setFiles] = useState([])\n  // const changeSuccess = (res) => {\n  //   const tfiles = [...files]\n  //   for (var i = 0; i < tfiles.length; i++) {\n  //     if (res.key.includes(tfiles[i].name)) {\n  //       tfiles[i].status = 'success'\n  //     }\n  //   }\n  //   setFiles(tfiles)\n  // }\n\n  const addArea = (data) => {\n    // eslint-disable-next-line no-unreachable\n    rest\n      .post(constants.URL.ADD_NEW_GROUP, data)\n      .then((response) => {\n        console.log(response.data)\n        addAssetGroup(response.data)\n        form.resetFields()\n        setAddAreaVisible(false)\n        message.success('Area added!')\n      })\n      .catch((error) => {\n        console.log(error)\n        message.error('Something Failed')\n        setAddAreaVisible(false)\n      })\n  }\n  const onFinishArea = (values) => {\n    console.log(values)\n    var data = values.asset\n    // eslint-disable-next-line no-unused-expressions\n    ;(data.assetGroupPlan = 'TEST'),\n      (data.assetGroupGlink = 'http://google.com'),\n      (data.assetGroupTypeId = 1)\n    addArea(data)\n  }\n  const onFinishFailedArea = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n    message.warning('Please fill mandatory fields')\n  }\n  const onCancelModel = () => {\n    setClickedLocation({})\n    setAddAreaVisible(false)\n  }\n\n  return (\n    <Layout.Content>\n      <Modal\n        title=\"Add Area\"\n        centered\n        okText=\"Save\"\n        visible={addAreaVisible}\n        footer={null}\n        onCancel={() => onCancelModel()}\n      >\n        <Form\n          {...layout}\n          layout=\"vertical\"\n          name=\"basic\"\n          form={form}\n          initialValues={{\n            asset: {\n              assetGroupLat: clickedLocation.lat,\n              assetGroupLong: clickedLocation.lng\n            }\n          }}\n          onFinish={onFinishArea}\n          onFinishFailed={onFinishFailedArea}\n          autoComplete=\"false\"\n        >\n          <Form.Item\n            colon={false}\n            label=\"Area / Project Name\"\n            name={['asset', 'assetGroupName']}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the area name'\n              }\n            ]}\n          >\n            <Input placeholder=\"Area Name\" />\n          </Form.Item>\n\n          <Form.Item\n            colon={false}\n            label=\"Area Location\"\n            name={['asset', 'assetGroupLocation']}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the area location'\n              }\n            ]}\n          >\n            <Input placeholder=\"Area Location\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Area Latitude\"\n            name={['asset', 'assetGroupLat']}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the area latitude'\n              }\n            ]}\n          >\n            <Input disabled={true} placeholder=\"Area Latitude\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Area Longitude\"\n            name={['asset', 'assetGroupLong']}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the area longitude'\n              }\n            ]}\n          >\n            <Input disabled={true} placeholder=\"Area Longitude\" />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n              Save\n            </Button>\n            <Button\n              disabled={isLoading}\n              htmlType=\"button\"\n              onClick={() => {\n                onCancelModel()\n              }}\n              style={{ margin: '0 8px' }}\n            >\n              Cancel\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n      <Map\n        center={postion}\n        zoom={9}\n        style={{ width: '100%', height: '87vh' }}\n        onclick={handleMapClick}\n        animate={true}\n      >\n        <TileLayer\n          attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.stadiamaps.com/tiles/outdoors/{z}/{x}/{y}{r}.png\"\n        />\n        {listOfGroups &&\n          listOfGroups.map((group, i) => {\n            return (\n              <Marker\n                key={i}\n                onClick={() => onClickMarker(group, i)}\n                position={[group.assetGroupLat, group.assetGroupLong]}\n                onMouseOver={(e) => {\n                  e.target.openTooltip()\n                }}\n              >\n                <Tooltip>{group.assetGroupName}</Tooltip>\n              </Marker>\n            )\n          })}\n      </Map>\n    </Layout.Content>\n  )\n}\n\nAddArea.propTypes = {}\n\nexport { AddArea }\n","import React from 'react'\nimport HeaderBar from '../../components/HeaderBar'\nimport { AddArea } from '../../components/AddArea'\n\nconst AddPlotArea = (props) => {\n  return (\n    <HeaderBar>\n      <AddArea></AddArea>\n    </HeaderBar>\n  )\n}\n\nAddPlotArea.propTypes = {}\n\nexport { AddPlotArea }\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react'\nimport { Layout, Table } from 'antd'\nimport { SmileTwoTone } from '@ant-design/icons'\n// import { Smile } from '../asssets/smile'\n// import { Sad } from '../asssets/sad.svg'\n// import { Normal } from '../asssets/normal.svg'\n\nimport '../styles/lead-table.css'\nimport '../styles/common.css'\nimport { useHistory } from 'react-router-dom'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport constants from '../constants'\n\nconst LeadTable = (props) => {\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n  const getTodayLeads = useStoreActions(\n    (actions) => actions.leads.getTodayLeads\n  )\n\n  const todayLeads = useStoreState((store) => store.leads.today_leads)\n  const columns = [\n    {\n      title: 'Name',\n      width: 200,\n      // eslint-disable-next-line react/display-name\n      render: (user) => (\n        <span style={{ color: '#000000a6', fontWeight: 'bold' }}>\n          {user.leadCustomer.userFname}{' '}\n          {user.leadCustomer.userSname ? user.leadCustomer.userSname : ''}\n        </span>\n      )\n    },\n    {\n      title: 'Contact Number',\n      width: 150,\n      render: (user) => user.leadCustomer.userMobile\n    },\n    {\n      title: 'Email',\n      width: 200,\n      // eslint-disable-next-line react/display-name\n      render: (user) =>\n        user.leadCustomer.userEmailid ? user.leadCustomer.userEmailid : '-'\n    },\n    {\n      title: 'Status',\n      width: 150,\n      render: (user) => (\n        <span style={{ color: '#4c46a7', fontWeight: 'bold' }}>\n          {constants.getLeadStatusById(user.leadStatus)}\n        </span>\n      )\n    },\n    {\n      title: 'Next Schedule',\n      width: 150,\n      // eslint-disable-next-line react/display-name\n      render: (user) => (\n        <span>\n          {new Date(user.nextScheduleDatetime).toISOString().split('T')[0]}\n        </span>\n      )\n    },\n    {\n      title: 'Source',\n      width: 150,\n      render: (user) => (user.leadSource ? user.leadSource : '-')\n    },\n    {\n      title: 'Score Summary',\n      // eslint-disable-next-line react/display-name\n      render: (user) => (\n        <div className=\"icons-list\">\n          {user.leadOutcome.slice(0, 3).map((score, i) => {\n            let color\n            if (score.outCome == 'Positive') {\n              color = '#5ccb88'\n            } else if (score.outCome == 'Negative') {\n              color = '#f51044'\n            } else {\n              color = '#faad14'\n            }\n            return (\n              <span key={i} style={{ paddingRight: '1rem' }}>\n                <SmileTwoTone twoToneColor={color} />\n              </span>\n            )\n          })}\n        </div>\n      )\n    },\n    {\n      title: 'Action',\n      dataIndex: '',\n      // eslint-disable-next-line react/display-name\n      render: (agent) => (\n        <span>\n          <a\n            onClick={() => {\n              history.push({ pathname: 'agent/overall', leadDetail: agent })\n            }}\n          >\n            Add Audit\n          </a>\n        </span>\n      )\n    }\n  ]\n  const tableColumns = columns.map((item, index) => ({\n    ...item,\n    ellipsis: true,\n    className: 't-head'\n  }))\n  const data = {\n    url:\n      constants.URL.GET_TODAY_LEADS + '&mobile=' + props.currentUser.userMobile,\n    callback: () => {\n      setLoading(false)\n    }\n  }\n  useEffect(() => {\n    setLoading(true)\n    getTodayLeads(data)\n  }, [])\n\n  return (\n    <Layout.Content>\n      <Table\n        columns={tableColumns}\n        size=\"middle\"\n        loading={loading}\n        dataSource={todayLeads}\n        pagination={{ pageSize: 10 }}\n        scroll={{ y: 500 }}\n      />\n    </Layout.Content>\n  )\n}\n\nLeadTable.propTypes = {}\n\nexport { LeadTable }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Col, Row } from 'antd'\nimport '../styles/common.css'\nimport '../styles/agent-message-card.css'\nimport Text from 'antd/lib/typography/Text'\nimport dayjs from 'dayjs'\nconst relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime)\nconst AgentMessageCard = props => {\n  return (\n    <div className=\"agent-message-card\" style={{ backgroundColor: 'white', minHeight: '145px' }}>\n      <Card className=\" ag-bg-img\">\n        <Row>\n          <Col span={6}>\n          </Col>\n          <Col span={18}>\n            <Row>\n              <Text className=\"ag-message-title\">Hello Agent!</Text>\n            </Row>\n            <Row>\n              <Text className=\"ag-message-text\">\n                {props.data.message}\n              </Text>\n            </Row>\n            <Row>\n              <Text className=\"ag-message-time\">\n                {dayjs(props.data.createdAt).fromNow()}\n              </Text>\n            </Row>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  )\n}\n\nAgentMessageCard.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport { AgentMessageCard }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, Row, Col, Button } from 'antd'\nimport '../styles/overall-tile.css'\nimport Text from 'antd/lib/typography/Text'\nimport { useHistory } from 'react-router-dom'\n\nconst OverViewCard = (props) => {\n  var history = useHistory()\n  return (\n    <Card className=\"overall-tile\" style={{ backgroundColor: props.color }}>\n      <Row>\n        <Col span=\"4\">\n          <div className=\"o-initial-box\">\n            <Text className=\"o-initial-text\">{props.title[0]}</Text>\n          </div>\n        </Col>\n        <Col span=\"9\" offset={2}>\n          <Row>\n            <Text className=\"o-count\">{props.count}</Text>\n          </Row>\n          <Row>\n            <Text className=\"o-title\">{props.title}</Text>\n          </Row>\n        </Col>\n        {props.showbutton && (\n          <Col span=\"8\">\n            <div className=\"o-center\">\n              <Button\n                className=\"o-add-btn\"\n                onClick={() => {\n                  history.push('agent/add-lead')\n                }}\n              >\n                + Add Lead\n              </Button>\n            </div>\n          </Col>\n        )}\n      </Row>\n    </Card>\n  )\n}\n\nOverViewCard.propTypes = {\n  color: PropTypes.string,\n  title: PropTypes.any,\n  count: PropTypes.any,\n  showbutton: PropTypes.bool.isRequired\n}\n\nexport { OverViewCard }\n","import React, { useEffect } from 'react'\nimport { Carousel, Row, Col } from 'antd'\n\nimport { useStoreActions, useStoreState } from 'easy-peasy'\n\nimport HeaderBar from '../../components/HeaderBar'\nimport { LeadTable } from '../../components/LeadTable'\nimport { AgentMessageCard } from '../../components/AgentMessageCard'\nimport { OverViewCard } from '../../components/OverViewCard'\n\nimport '../../styles/common.css'\nimport constants from '../../constants'\n\nconst AgentHome = (props) => {\n  const currentUser = useStoreState((state) => state.auth.user)\n  // const getAdminMessages = useStoreActions(\n  //   (actions) => actions.broadCastMeassages.getMessages\n  // )\n  const adminMessages = useStoreState(\n    (state) => state.broadCastMeassages.messages\n  )\n\n  const getLeadStatusCount = useStoreActions(\n    (actions) => actions.leads.getLeadStatusCount\n  )\n  const leadStatusCount = useStoreState((state) => state.leads.statusCount)\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    // getAdminMessages(() => {\n    //   console.log('admin Msg Received')\n    // })\n    getLeadStatusCount(\n      constants.URL.GET_LEAD_STATUS_COUNT + '?mobile=' + currentUser.userMobile\n    )\n  }, [])\n  return (\n    <HeaderBar>\n      <Carousel autoplay dotPosition=\"bottom\">\n        {adminMessages.map((msg, i) => (\n          <AgentMessageCard key={i} data={msg} />\n        ))}\n      </Carousel>\n      <Row gutter={[12, 12]}>\n        <Col>\n          <OverViewCard\n            color=\"#7571c7\"\n            title=\"New Leads \"\n            count={leadStatusCount.created}\n            showbutton={true}\n          ></OverViewCard>\n        </Col>\n        <Col>\n          <OverViewCard\n            color=\"#4cc311\"\n            title=\"Prospecting\"\n            count={leadStatusCount.prospecting}\n            showbutton={false}\n          ></OverViewCard>\n        </Col>\n        <Col>\n          <OverViewCard\n            color=\"#1890ff\"\n            title=\"Completed Leads\"\n            count={leadStatusCount.completed}\n            showbutton={false}\n          ></OverViewCard>\n        </Col>\n        <Col>\n          <OverViewCard\n            color=\"#ff707c\"\n            title=\"Closure Leads\"\n            count={leadStatusCount.closure}\n            showbutton={false}\n          ></OverViewCard>\n        </Col>\n      </Row>\n      <Row>\n        <h5\n          style={{\n            fontFamily: 'Lato',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            color: '#150e4f'\n          }}\n        >\n          Today Lead List\n        </h5>\n        <LeadTable currentUser={currentUser}></LeadTable>\n      </Row>\n    </HeaderBar>\n  )\n}\n\nexport { AgentHome }\n","import React from 'react'\nimport { PageHeader, Button, Layout } from 'antd'\nimport '../styles/agent-overall.css'\nconst { Header } = Layout\nconst SubNavBar = (props) => {\n  return (\n    <div>\n      <Header style={{ padding: '2rem' }}></Header>\n      <PageHeader\n        className=\"site-page-subheader\"\n        ghost={true}\n        onBack={() => window.history.back()}\n        title=\"Back\"\n        extra={[\n          <Button className=\"book-btn\" key=\"2\">\n            Book\n          </Button>,\n          <Button key=\"1\">. . .</Button>\n        ]}\n      ></PageHeader>\n    </div>\n  )\n}\n\nexport { SubNavBar }\n","import React from 'react'\nimport { Card, Descriptions, Typography } from 'antd'\nimport '../styles/lead-personal-card.css'\nconst { Text } = Typography\nconst LeadPersonalCard = (props) => {\n  const { lead, source } = props\n\n  return (\n    <Card className=\"lead-card\">\n      <Descriptions\n        colon={false}\n        size=\"middle\"\n        layout=\"vertical\"\n        column={{ xxl: 2, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }}\n      >\n        <Descriptions.Item label=\"Lead Name\">\n          <Text>{lead.userFname + ' ' + lead.userSname}</Text>\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Email\">{lead.userEmailid}</Descriptions.Item>\n        <Descriptions.Item label=\"Contact Number\">\n          {lead.userMobile}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Alternative Contact number\">\n          {lead.userMobileAlt}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Address\">\n          {lead.userAddress}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"Lead source\">{source}</Descriptions.Item>\n      </Descriptions>\n    </Card>\n  )\n}\n\nLeadPersonalCard.propTypes = {}\n\nexport { LeadPersonalCard }\n","/* eslint-disable no-useless-computed-key */\n/* eslint-disable space-before-function-paren */\nimport React, { useState } from 'react'\nimport {\n  Collapse,\n  Row,\n  Col,\n  Button,\n  Form,\n  Select,\n  DatePicker,\n  Divider,\n  Radio,\n  message\n} from 'antd'\nimport '../styles/overall-call-status.css'\nimport constants from '../constants'\nimport rest from 'services/http'\nimport { useHistory } from 'react-router-dom'\nconst { Option } = Select\nconst { Panel } = Collapse\n\n// const AttachIntrestedForm = (props) => {\n//   return (\n//     <Drawer\n//       title=\"Add Intrest\"\n//       width={720}\n//       onClose={props.onClose}\n//       visible={props.show}\n//       bodyStyle={{ paddingBottom: 80 }}\n//       footer={\n//         <div\n//           style={{\n//             textAlign: 'right'\n//           }}\n//         >\n//           <Button onClick={props.onClose} style={{ marginRight: 8 }}>\n//             Cancel\n//           </Button>\n//           <Button onClick={() => props.onClose} type=\"primary\">\n//             Submit\n//           </Button>\n//         </div>\n//       }\n//     >\n//       <Form layout=\"vertical\" hideRequiredMark>\n//         <Row gutter={16}>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"name\"\n//               label=\"Name\"\n//               rules={[{ required: true, message: 'Please enter user name' }]}\n//             >\n//               <Input placeholder=\"Please enter user name\" />\n//             </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"url\"\n//               label=\"Url\"\n//               rules={[{ required: true, message: 'Please enter url' }]}\n//             >\n//               <Input\n//                 style={{ width: '100%' }}\n//                 addonBefore=\"http://\"\n//                 addonAfter=\".com\"\n//                 placeholder=\"Please enter url\"\n//               />\n//             </Form.Item>\n//           </Col>\n//         </Row>\n//         <Row gutter={16}>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"owner\"\n//               label=\"Owner\"\n//               rules={[{ required: true, message: 'Please select an owner' }]}\n//             >\n//               <Select placeholder=\"Please select an owner\">\n//                 <Option value=\"xiao\">Xiaoxiao Fu</Option>\n//                 <Option value=\"mao\">Maomao Zhou</Option>\n//               </Select>\n//             </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"type\"\n//               label=\"Type\"\n//               rules={[{ required: true, message: 'Please choose the type' }]}\n//             >\n//               <Select placeholder=\"Please choose the type\">\n//                 <Option value=\"private\">Private</Option>\n//                 <Option value=\"public\">Public</Option>\n//               </Select>\n//             </Form.Item>\n//           </Col>\n//         </Row>\n//         <Row gutter={16}>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"approver\"\n//               label=\"Approver\"\n//               rules={[\n//                 { required: true, message: 'Please choose the approver' }\n//               ]}\n//             >\n//               <Select placeholder=\"Please choose the approver\">\n//                 <Option value=\"jack\">Jack Ma</Option>\n//                 <Option value=\"tom\">Tom Liu</Option>\n//               </Select>\n//             </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//             <Form.Item\n//               name=\"dateTime\"\n//               label=\"DateTime\"\n//               rules={[\n//                 { required: true, message: 'Please choose the dateTime' }\n//               ]}\n//             >\n//               <DatePicker.RangePicker\n//                 style={{ width: '100%' }}\n//                 getPopupContainer={(trigger) => trigger.parentNode}\n//               />\n//             </Form.Item>\n//           </Col>\n//         </Row>\n//         <Row gutter={16}>\n//           <Col span={24}>\n//             <Form.Item\n//               name=\"description\"\n//               label=\"Description\"\n//               rules={[\n//                 {\n//                   required: true,\n//                   message: 'please enter url description'\n//                 }\n//               ]}\n//             >\n//               <Input.TextArea\n//                 rows={4}\n//                 placeholder=\"please enter url description\"\n//               />\n//             </Form.Item>\n//           </Col>\n//         </Row>\n//       </Form>\n//     </Drawer>\n//   )\n// }\n\nconst OverallCallStatus = (props) => {\n  // console.log(props)\n  // const [visibleIntrestedForm, setVisibleIntrestedForm] = useState(false)\n  // const [visibleNoteForm, setVisibleNoteForm] = useState(false)\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n\n  function handleCollapse() {}\n  function onCallStatusSave(values) {\n    var leadAssetList = []\n    for (var i = 0; i < values.leadAsset.length; i++) {\n      var leaditem = {}\n      leaditem.leadItemAssetId = values.leadAsset[i]\n      leadAssetList.push(leaditem)\n    }\n    var data = { ...values }\n    data.leadAuditCreatedUser = {\n      userMobile: props.currentUser.userMobile\n    }\n    data.leadAuditScheduleDatetime = data.leadAuditScheduleDatetime\n      ? data.leadAuditScheduleDatetime.$d\n      : undefined\n    data.leadAuditLeadId = props.leadId\n    data.leadItem = leadAssetList\n    data.leadAuditCreatedDatetime = new Date()\n    setIsLoading(true)\n    rest\n      .post(constants.URL.ADD_NEW_AUDIT, data)\n      .then((response) => {\n        console.log(response.data)\n        message.success('Audit added!')\n        setIsLoading(false)\n        form.resetFields()\n        history.replace('/agent')\n      })\n      .catch(() => {\n        message.error('Audit Failed!')\n        setIsLoading(false)\n      })\n  }\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n  // const layout = {\n  //   labelCol: {\n  //     span: 12\n  //   },\n  //   wrapperCol: {\n  //     span: 12\n  //   }\n  // }\n  const tailLayout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      {/* <AttachIntrestedForm\n        show={visibleIntrestedForm}\n        onClose={onCloseIntrestedForm}\n      />\n      <AddNote\n        visible={visibleNoteForm}\n        onClose={onCloseNote}\n        onSave={() => onSaveNote}\n      /> */}\n      <Col span={24}>\n        <Form\n          layout=\"vertical\"\n          name=\"form_in_modal\"\n          // labelCol={{ span: 12 }}\n          {...tailLayout}\n          form={form}\n          initialValues={{\n            leadStatus: props.status + '',\n            leadAsset: props.leadAsset\n          }}\n          onFinish={onCallStatusSave}\n          onFinishFailed={onFinishFailed}\n        >\n          <Collapse\n            className=\"call-status-card\"\n            defaultActiveKey={['1']}\n            onChange={handleCollapse}\n            expandIconPosition=\"right\"\n            expandIcon={() => {\n              return <Button type=\"default\">-</Button>\n            }}\n          >\n            <Panel header=\"Call Status\" key=\"1\">\n              <Row gutter={[8, 0]}>\n                <Col span=\"8\">\n                  <Form.Item\n                    colon={false}\n                    label=\"Call type\"\n                    name={['leadAuditType', 'auditTypeId']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please enter the Call type\"'\n                      }\n                    ]}\n                  >\n                    <Select placeholder=\"Select Call Type\">\n                      <Option value=\"1\">Inbound</Option>\n                      <Option value=\"2\">Outbound</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span=\"8\">\n                  <Form.Item\n                    colon={false}\n                    label=\"Lead Status\"\n                    name=\"leadStatus\"\n                    defaultActiveKey={[props.status]}\n                  >\n                    <Select placeholder=\"Select Lead Status\">\n                      <Option key={1} value=\"1\">\n                        Created\n                      </Option>\n                      <Option key={2} value=\"2\">\n                        Prospecting\n                      </Option>\n                      <Option key={3} value=\"3\">\n                        Closure\n                      </Option>\n                      <Option key={4} value=\"4\">\n                        Converted\n                      </Option>\n                      <Option key={5} value=\"5\">\n                        Completed\n                      </Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n                <Col span=\"8\">\n                  <Form.Item\n                    colon={false}\n                    label=\"Call purpose\"\n                    name={['leadAuditStatus', 'auditStatusId']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please enter the call purpose'\n                      }\n                    ]}\n                  >\n                    <Select placeholder=\"Call Purpose\">\n                      {constants.auditStatus.map((status, index) => {\n                        return (\n                          <Option key={index} value={status.auditStatusId}>\n                            {status.auditStatus}\n                          </Option>\n                        )\n                      })}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Row gutter={[8, 0]}>\n                {/* <Col span=\"8\">\n                  <Form.Item label=\"Call Duration\" name={['call', 'duration']}>\n                    <InputNumber onChange={onChangeSec} min={0} />\n                    <span> Mins</span>\n                  </Form.Item>\n                </Col> */}\n                <Col span=\"8\">\n                  <Form.Item\n                    label=\"Schedule Date\"\n                    name=\"leadAuditScheduleDatetime\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please enter Schedule Date'\n                      }\n                    ]}\n                  >\n                    <DatePicker format=\"YYYY-MM-DD\"></DatePicker>\n                  </Form.Item>\n                </Col>\n                <Col span=\"8\">\n                  <Form.Item label=\"Interested In\" name=\"leadAsset\">\n                    <Select\n                      mode=\"multiple\"\n                      placeholder=\"Intrested Property\"\n                      defaultValue={props.leadAsset}\n                      loading={isLoading}\n                    ></Select>\n                  </Form.Item>\n                </Col>\n                <Col span=\"8\">\n                  <Form.Item\n                    label=\"About the call\"\n                    name={['leadAuditOutcome', 'auditOutcomeId']}\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Please give review'\n                      }\n                    ]}\n                  >\n                    <Radio.Group defaultValue=\"3\">\n                      <Radio.Button value=\"1\">Positive</Radio.Button>\n                      <Radio.Button value=\"2\">Negative</Radio.Button>\n                      <Radio.Button value=\"3\">Neutral</Radio.Button>\n                    </Radio.Group>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Divider />\n              <Row className=\"panel-footer-row\">\n                <div className=\"btn-wrapper\">\n                  <Form.Item>\n                    <Button\n                      title=\"Save\"\n                      htmlType=\"submit\"\n                      type=\"primary\"\n                      className=\"b-primary\"\n                      loading={isLoading}\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      title=\"Cancel\"\n                      htmlType=\"reset\"\n                      className=\"b-secondary\"\n                      disabled={isLoading}\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </Button>\n                  </Form.Item>\n                </div>\n              </Row>\n            </Panel>\n          </Collapse>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n\nOverallCallStatus.propTypes = {}\n\nexport { OverallCallStatus }\n","import React, { useEffect } from 'react'\nimport HeaderBar from '../../components/HeaderBar'\nimport { SubNavBar } from '../../components/SubNavBar'\nimport { Row, Col, Descriptions, Card, Layout } from 'antd'\nimport { LeadPersonalCard } from '../../components/LeadPersonalCard'\nimport '../../styles/agent-overall.css'\nimport { OverallCallStatus } from '../../components/OverallCallStatus'\nimport { useHistory } from 'react-router-dom'\nimport constants from '../../constants'\nimport { useStoreState } from 'easy-peasy'\nconst OverAll = (props) => {\n  const history = useHistory()\n  const lead = history.location.leadDetail\n  const currentUser = useStoreState((state) => state.auth.user)\n  useEffect(() => {\n    if (lead === undefined) history.goBack()\n  }, [])\n  return (\n    <HeaderBar drawer={false}>\n      <SubNavBar></SubNavBar>\n      <Layout.Content id=\"lead-section\" style={{ padding: '1rem' }}>\n        <Row gutter={[16, 16]}>\n          {lead && lead.leadStatus && (\n            <>\n              <Col span={16}>\n                <OverallCallStatus\n                  leadId={lead.leadId}\n                  status={lead.leadStatus}\n                  leadAsset={lead.leadAsset}\n                  currentUser={currentUser}\n                ></OverallCallStatus>\n              </Col>\n              <Col span={8}>\n                <Card className=\"lead-card\">\n                  <Descriptions\n                    colon={false}\n                    size=\"middle\"\n                    layout=\"vertical\"\n                    column={{ xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1 }}\n                  >\n                    <Descriptions.Item label=\"Lead Status\">\n                      {constants.getLeadStatusById(lead.leadStatus)}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Best time to call\">\n                      {lead.leadCustomer.preferredCallStart +\n                        '-' +\n                        lead.leadCustomer.preferredCallEnd}\n                    </Descriptions.Item>\n                    {/* <Descriptions.Item label=\"Intrested  area\">\n                Adayar{' '}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Intrested  plots\">\n                Plot CA301, Plot CA304, Plot CA308,Plot CA308\n              </Descriptions.Item> */}\n                  </Descriptions>\n                </Card>\n                <div style={{ paddingTop: '1rem' }}>\n                  <LeadPersonalCard\n                    lead={lead.leadCustomer}\n                    source={lead.leadSource}\n                  ></LeadPersonalCard>\n                </div>\n              </Col>\n            </>\n          )}\n        </Row>\n      </Layout.Content>\n      <Layout.Content></Layout.Content>\n    </HeaderBar>\n  )\n}\n\nexport { OverAll }\n","import React, { useState, useEffect } from 'react'\nimport HeaderBar from 'components/HeaderBar'\nimport {\n  Row,\n  Col,\n  Layout,\n  Divider,\n  Input,\n  Button,\n  Form,\n  TimePicker,\n  Collapse,\n  message,\n  Select\n} from 'antd'\nimport { ArrowLeftOutlined } from '@ant-design/icons'\nimport '../../styles/common.css'\nimport { useHistory } from 'react-router-dom'\nimport constants from '../../constants'\nimport rest from 'services/http'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nconst { Panel } = Collapse\nconst { Option } = Select\nconst { RangePicker } = TimePicker\nconst { Content, Header } = Layout\nconst tailLayout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n}\nconst AddLead = (props) => {\n  var today = new Date()\n  var tomorrow = new Date()\n  tomorrow.setDate(today.getDate() + 1)\n  const history = useHistory()\n  const [form] = Form.useForm()\n  const [isLoading, setIsLoading] = useState(false)\n  const addLead = useStoreActions((actions) => actions.leads.addLead)\n  const currentUser = useStoreState((state) => state.auth.user)\n  const [groups, setGroups] = useState(null)\n  const [properties, setProperties] = useState(null)\n  const onFinish = (values) => {\n    const data = values\n    data.lead.userOccupation = '-'\n    data.lead.userPassword = data.lead.userMobile\n    data.lead.userMobileAlt = data.lead.userMobile\n    data.lead.preferredCallStart = values.best_call_time\n      ? values.best_call_time[0].$d.toTimeString().split(' ')[0]\n      : null\n    data.lead.preferredCallEnd = values.best_call_time\n      ? values.best_call_time[1].$d.toTimeString().split(' ')[0]\n      : null\n\n    var leadList = []\n    for (var i = 0; i < data.leadItemAssetId.length; i++) {\n      var leaditem = {}\n      leaditem.leadItemAssetId = data.leadItemAssetId[i]\n      leadList.push(leaditem)\n    }\n    const request = {\n      leadAgentMobile: currentUser.userMobile,\n      leadSource: data.leadSource ? data.leadSource : '-',\n      leadCustomer: data.lead,\n      leadStatus: 1,\n      leadInterest: data.leadInterest,\n      leadCreateDate: new Date(),\n      nextScheduleDatetime: tomorrow,\n      leadItem: leadList\n    }\n    console.log('Success:', request)\n    setIsLoading(true)\n    rest\n      .post(constants.URL.ADD_NEW_LEAD, request)\n      .then((res) => {\n        addLead(res.data)\n        message.success('Lead Added!')\n        setIsLoading(false)\n        form.resetFields()\n      })\n      .catch((err) => {\n        message.error('Failed!')\n        setIsLoading(false)\n        console.error(err)\n      })\n  }\n  function callback(key) {\n    console.log(key)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n    message.warning('Please fill mandatory fields')\n  }\n  const getGroups = () => {\n    setIsLoading(true)\n    rest\n      .get(constants.URL.GET_ASSET_GROUPS)\n      .then((res) => {\n        setGroups(res.data)\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        console.error(err)\n        setIsLoading(false)\n      })\n  }\n\n  const onChangeArea = (id) => {\n    setIsLoading(true)\n    rest\n      .get(constants.URL.GET_ASSET_BY_GROUP_ID + '?groupId=' + id)\n      .then((res) => {\n        setProperties(res.data)\n        setIsLoading(false)\n      })\n      .catch((err) => {\n        console.error(err)\n        setIsLoading(false)\n      })\n  }\n  useEffect(() => {\n    getGroups()\n  }, [])\n  return (\n    <div>\n      <HeaderBar drawer={false}>\n        <Content style={{ backgroundColor: '#f0f1f4' }}>\n          {/* To match the height one dummy header is used */}\n          <Header />\n          <Divider style={{ width: '100%', margin: 0 }} />\n          <Header>\n            <Row>\n              <Col span=\"3\">\n                <span\n                  className=\"back\"\n                  onClick={() => {\n                    history.goBack()\n                  }}\n                >\n                  <ArrowLeftOutlined /> &nbsp;Back\n                </span>\n              </Col>\n              <Col span=\"6\"></Col>\n              <Col span=\"7\">\n                {/* <Search\n                  placeholder=\"Enter Locality\"\n                  onSearch={(value) => console.log(value)}\n                  style={{ width: '100%' }}\n                /> */}\n              </Col>\n              <Col span=\"6\" />\n              <Col span=\"2\">\n                {/* <Button>\n                  <CompressOutlined />\n                </Button> */}\n              </Col>\n            </Row>\n          </Header>\n          <Divider style={{ width: '100%', margin: 0 }} />\n          <div\n            style={{\n              padding: '1rem'\n            }}\n          >\n            <h5\n              style={{\n                fontFamily: 'Lato',\n                fontSize: '16px',\n                fontWeight: 'bold',\n                color: '#150e4f'\n              }}\n            >\n              Create New Lead\n            </h5>\n            <Row gutter={[16, 16]}>\n              <Col span={24}>\n                <Form\n                  {...tailLayout}\n                  layout=\"vertical\"\n                  name=\"basic\"\n                  form={form}\n                  initialValues={{}}\n                  onFinish={onFinish}\n                  onFinishFailed={onFinishFailed}\n                  autoComplete=\"false\"\n                >\n                  <Collapse\n                    defaultActiveKey={['1', '2', '3']}\n                    onChange={callback}\n                  >\n                    <Panel header=\"Contact Information\" key=\"1\">\n                      <Row gutter={[8, 0]}>\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Lead First Name\"\n                            name={['lead', 'userFname']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please enter the first name'\n                              }\n                            ]}\n                          >\n                            <Input placeholder=\"First Name\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Lead Last Name\"\n                            name={['lead', 'userSname']}\n                          >\n                            <Input placeholder=\"Last Name\" />\n                          </Form.Item>\n                        </Col>\n\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Email Id\"\n                            name={['lead', 'userEmailid']}\n                            rules={[\n                              {\n                                type: 'email',\n                                message: 'Please enter valid email id'\n                              }\n                            ]}\n                          >\n                            <Input placeholder=\"Email Id\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Contact Number\"\n                            name={['lead', 'userMobile']}\n                            rules={[\n                              {\n                                required: true,\n                                message: 'Please enter the contact number'\n                              },\n                              {\n                                pattern: /^\\d{10}$/,\n                                message: 'Enter a valid contact number'\n                              }\n                            ]}\n                          >\n                            <Input placeholder=\"Mobile\" />\n                          </Form.Item>\n                        </Col>\n\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Alternate Contact Number\"\n                            name={['lead', 'userMobileAlt']}\n                            rules={[\n                              {\n                                pattern: /^\\d{10}$/,\n                                message: 'Enter a valid contact number'\n                              }\n                            ]}\n                          >\n                            <Input placeholder=\"Alternative Mobile\" />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Panel>\n                    <Panel header=\"Residential Information\" key=\"2\">\n                      <Row gutter={[8, 0]}>\n                        <Col span=\"16\">\n                          <Form.Item\n                            label=\"Address\"\n                            colon={false}\n                            name={['lead', 'userAddress']}\n                          >\n                            <Input.TextArea placeholder=\"Address\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"City\"\n                            colon={false}\n                            name={['lead', 'userCity']}\n                          >\n                            <Input placeholder=\"City Name\" />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                      <Row gutter={[8, 0]}>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"State\"\n                            colon={false}\n                            name={['lead', 'userState']}\n                          >\n                            <Input placeholder=\"State\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"Country\"\n                            colon={false}\n                            name={['lead', 'userCountry']}\n                          >\n                            <Input placeholder=\"Country\" />\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Panel>\n                    <Panel header=\"Business Information\" key=\"3\">\n                      <Row gutter={[8, 0]}>\n                        <Col span=\"8\">\n                          <Form.Item\n                            colon={false}\n                            label=\"Best Time to call\"\n                            name=\"best_call_time\"\n                          >\n                            <RangePicker\n                              format=\"HH:mm a\"\n                              minuteStep={30}\n                              use12Hours={true}\n                            />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"Lead Source\"\n                            colon={false}\n                            name=\"leadSource\"\n                          >\n                            <Input placeholder=\"Lead Source\" />\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"Interested in\"\n                            colon={false}\n                            name=\"leadInterest\"\n                          >\n                            <Input placeholder=\"Flat 1, Flat 2..,\" />\n                          </Form.Item>\n                        </Col>\n                        <Col>\n                          <Form.Item\n                            label=\"Intrested Area\"\n                            colon={false}\n                            name=\"leadAssetArea\"\n                          >\n                            <Select\n                              placeholder=\"Intrested Area\"\n                              loading={isLoading}\n                              onChange={onChangeArea}\n                            >\n                              {groups &&\n                                groups.map((group) => {\n                                  return (\n                                    <Option key={group.assetGroupId}>\n                                      {group.assetGroupName}\n                                    </Option>\n                                  )\n                                })}\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                          <Form.Item\n                            label=\"Intrested Property\"\n                            colon={false}\n                            name=\"leadItemAssetId\"\n                          >\n                            <Select\n                              mode=\"multiple\"\n                              placeholder=\"Intrested Property\"\n                              loading={isLoading}\n                            >\n                              {properties &&\n                                properties.map((asset) => {\n                                  return (\n                                    <Option key={asset.assetId}>\n                                      {asset.assetNumber}\n                                    </Option>\n                                  )\n                                })}\n                            </Select>\n                          </Form.Item>\n                        </Col>\n                      </Row>\n                    </Panel>\n                  </Collapse>\n                  <Row\n                    gutter={[24, 24]}\n                    style={{ paddingTop: '1rem', paddingBottom: '1rem' }}\n                  >\n                    <Col span=\"24\">\n                      <Button\n                        block\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        loading={isLoading}\n                      >\n                        Save\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              </Col>\n            </Row>\n            <br />\n          </div>\n        </Content>\n      </HeaderBar>\n    </div>\n  )\n}\n\nAddLead.propTypes = {}\n\nexport default AddLead\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react'\nimport { Table } from 'antd'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\nimport constants from '../constants'\nconst columns = [\n  {\n    title: 'Name',\n    width: 200,\n    // eslint-disable-next-line react/display-name\n    render: (user) => (\n      <span style={{ color: '#000000a6', fontWeight: 'bold' }}>\n        {user.leadCustomer.userFname}{' '}\n        {user.leadCustomer.userSname ? user.leadCustomer.userSname : ''}\n      </span>\n    )\n  },\n  {\n    title: 'Contact Number',\n    width: 150,\n    render: (user) => user.leadCustomer.userMobile\n  },\n  {\n    title: 'Email',\n    width: 200,\n    // eslint-disable-next-line react/display-name\n    render: (user) =>\n      user.leadCustomer.userEmailid ? user.leadCustomer.userEmailid : '-'\n  },\n\n  {\n    title: 'Status',\n    width: 150,\n    render: (user) => (\n      <span style={{ color: '#4c46a7', fontWeight: 'bold' }}>\n        {constants.getLeadStatusById(user.leadStatus)}\n      </span>\n    )\n  },\n  //   {\n  //     title: 'Status',\n  //     width: 150,\n  //     render: (user) => {\n  //        status\n  //       if (user.leadCustomer.leadStatus == 1) status = 'Created'\n  //       else if (user.leadCustomer.leadStatus == 2) status = 'Prospecting'\n  //       else if (user.leadCustomer.leadStatus == 3) status = 'Closure'\n  //       else if (user.leadCustomer.leadStatus == 4) status = 'Converted'\n  //       else if (user.leadCustomer.leadStatus == 5) status = 'Completed'\n\n  //       return <Tag color=\"#87d068\">{status}</Tag>\n  //     }\n  //   },\n  {\n    title: 'Source',\n    dataIndex: 'leadSource',\n    width: 150\n  },\n  {\n    title: 'Occupation',\n    width: 150,\n    render: (user) => user.leadCustomer.userOccupation\n  },\n  {\n    title: 'Address',\n    width: 150,\n    render: (user) =>\n      user.leadCustomer.userAddress ? user.leadCustomer.userAddress : '-'\n  },\n  {\n    title: 'City',\n    width: 150,\n    render: (user) =>\n      user.leadCustomer.userCity ? user.leadCustomer.userCity : '-'\n  }\n  //   {\n  //     title: 'Action',\n  //     dataIndex: '',\n  //     // eslint-disable-next-line react/display-name\n  //     render: (agent) => (\n  //       <span>\n  //         <a>Add Call</a>\n  //       </span>\n  //     )\n  //   }\n]\nconst tableColumns = columns.map((item, idx) => ({\n  ...item,\n  ellipsis: true,\n  key: idx,\n  className: 't-head'\n}))\n\nconst DetailedLeadList = (props) => {\n  const [loading, setLoading] = useState(false)\n  const getLeadsByAgent = useStoreActions(\n    (actions) => actions.leads.getLeadsByAgent\n  )\n  const leadsByAgent = useStoreState((state) => state.leads.leadsByAgent)\n  const currentUser = useStoreState((state) => state.auth.user)\n  const data = {\n    url: constants.URL.GET_LEAD_BY_AGENT + '?mobile=' + currentUser.userMobile,\n    callback: () => {\n      setLoading(false)\n    }\n  }\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log('::LIST LEADS Called::')\n    setLoading(true)\n    getLeadsByAgent(data)\n  }, [])\n  return (\n    <div>\n      <Table\n        columns={tableColumns}\n        size=\"middle\"\n        loading={loading}\n        dataSource={leadsByAgent}\n        pagination={{ pageSize: 8 }}\n      ></Table>\n    </div>\n  )\n}\n\nDetailedLeadList.propTypes = {}\n\nexport { DetailedLeadList }\n","import React from 'react'\nimport { Row } from 'antd'\n\nimport '../../styles/common.css'\nimport HeaderBar from 'components/HeaderBar'\nimport { DetailedLeadList } from 'components/DetailedLeadList'\n\nconst LeadList = (props) => {\n  return (\n    <HeaderBar>\n      <Row gutter={[8, 8]}>\n        <h5\n          style={{\n            fontFamily: 'Lato',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            color: '#150e4f'\n          }}\n        >\n          All Leads\n        </h5>\n        <DetailedLeadList></DetailedLeadList>\n      </Row>\n    </HeaderBar>\n  )\n}\n\nLeadList.propTypes = {}\n\nexport { LeadList }\n","import React, { useState } from 'react'\nimport { Form, Input, Button, Layout, Card, Divider, message } from 'antd'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { useStoreActions } from 'easy-peasy'\nimport { useHistory } from 'react-router-dom'\nimport rest from 'services/http'\nimport constants from '../constants'\nconst LoginForm = () => {\n  const history = useHistory()\n  const [isLoading, setIsLoading] = useState(false)\n  const setCurrentUser = useStoreActions((actions) => actions.auth.setUser)\n  const onFinish = (data) => {\n    console.log('Received values of form: ', data)\n    // rest.post(constants.URL.LOGIN,data.user){\n    // }\n    setIsLoading(true)\n    rest\n      .post(constants.URL.LOGIN, data.user)\n      .then((response) => {\n        setIsLoading(false)\n        if (response.data) {\n          setCurrentUser(response.data)\n          if (!response.data.userRole) {\n            message.warn('User role not found')\n          } else if (response.data.userRole == '2') {\n            history.replace('/agent')\n            // return <Redirect to=\"/agent\" />\n          } else if (response.data.userRole == '1') {\n            history.replace('/admin')\n          }\n        } else {\n          message.error('Invalid user')\n        }\n      })\n      .catch((error) => {\n        setIsLoading(false)\n        console.log('LOGIN ERROR::', error)\n      })\n  }\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Card\n        headStyle={{ textAlign: 'center' }}\n        title=\"Login\"\n        bordered={false}\n        style={{ width: 400 }}\n        className=\"login-card\"\n      >\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true\n          }}\n          onFinish={onFinish}\n        >\n          <Form.Item\n            name={['user', 'userMobile']}\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the mobile number'\n              },\n              {\n                pattern: /^\\d{10}$/,\n                message: 'Enter a valid mobile number'\n              }\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Mobile Number\"\n            />\n          </Form.Item>\n          <Form.Item\n            name={['user', 'userPassword']}\n            rules={[\n              {\n                required: true,\n                message: 'Please input your Password!'\n              }\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n\n          <Form.Item style={{ textAlign: 'center' }}>\n            <div>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                loading={isLoading}\n              >\n                Log in\n              </Button>\n              <Divider type=\"vertical\"></Divider>\n              <a href=\"\">Register</a>\n            </div>\n          </Form.Item>\n\n          <div style={{ textAlign: 'center' }}>\n            <span>Or</span>\n            <br></br>\n            <a className=\"login-form-forgot\" href=\"\">\n              Forgot password\n            </a>\n          </div>\n        </Form>\n      </Card>\n    </Layout>\n  )\n}\nexport default LoginForm\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useStoreState } from 'easy-peasy'\n\nconst PrivateRoute = ({ component: Component, userRole, ...rest }) => {\n  const currentUser = useStoreState((state) => state.auth.user)\n  const isLoggedIn = useStoreState((state) => state.auth.isLoggedIn)\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn && userRole == currentUser.userRole ? (\n          //   <Redirect to={props.location.pathname} />\n          <Component {...props} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","import React, { useEffect, useState } from 'react'\nimport { Row, Col, Spin } from 'antd'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nimport { useHistory } from 'react-router-dom'\nconst FlatLists = ({ group, onFlatClick }) => {\n  const history = useHistory()\n  const [loading, setLoading] = useState(false)\n  const getAssetByGroupId = useStoreActions(\n    (actions) => actions.assets.getAssetById\n  )\n  const assetList = useStoreState((state) => state.assets.assetDetails)\n  const data = {\n    id: group ? group.assetGroupId : history.replace('/login'),\n    callback: () => {\n      setLoading(false)\n    }\n  }\n  const onClickFlat = (flat) => {\n    onFlatClick(flat)\n  }\n  useEffect(() => {\n    setLoading(true)\n    getAssetByGroupId(data)\n  }, [])\n  return (\n    <div style={{ padding: '1rem' }}>\n      <h5\n        style={{\n          fontFamily: 'Lato',\n          fontSize: '16px',\n          fontWeight: 'bold',\n          color: '#150e4f'\n        }}\n      >\n        {assetList ? assetList.length : 0} Flats in{' '}\n        {group.assetGroupName ? group.assetGroupName : ''}\n      </h5>\n      {/* {props.flatLists.map((flat, idx) => {\n        return ( */}\n      <Spin spinning={loading}>\n        <Row justify=\"start\" gutter={[8, 8]}>\n          {assetList &&\n            assetList.map((asset, id) => {\n              var className = 'tile '\n              if (asset.assetStatus.assetStatusId == '1') {\n                className += 'tile-available'\n              } else if (asset.assetStatus.assetStatusId == '3') {\n                className += 'tile-booked'\n              } else {\n                className += 'tile-disabled'\n              }\n\n              return (\n                <Col\n                  key={id}\n                  className={className}\n                  span={3}\n                  onClick={() => onClickFlat(asset)}\n                >\n                  {asset.assetNumber}\n                </Col>\n              )\n            })}\n        </Row>\n      </Spin>\n      {/* )\n      })} */}\n    </div>\n  )\n}\n\nexport { FlatLists }\n","import React, { useState } from 'react'\nimport { Row, Button, Input, message, Form, Layout, Tabs, Select } from 'antd'\nimport constants from '../../constants'\nimport rest from 'services/http'\nimport { useStoreActions } from 'easy-peasy'\nimport { useHistory } from 'react-router-dom'\n\nconst { TabPane } = Tabs\nconst { Option } = Select\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n}\n\nconst FlatForm = (props) => {\n  const [isLoading, setLoading] = useState(false)\n  const [form] = Form.useForm()\n  const history = useHistory()\n  const [cStatus, setCStatus] = useState(1)\n  const addAsset = useStoreActions((state) => state.assets.addAsset)\n  function callback(key) {\n    setCStatus(key)\n  }\n  const onFinishArea = (values) => {\n    console.log(values)\n    values.assetGroupId = props.group\n      ? props.group.assetGroupId\n      : history.replace('/login')\n    values.assestStatus = { assetStatusId: cStatus }\n    // eslint-disable-next-line no-unused-expressions\n    setLoading(true)\n    rest\n      .post(constants.URL.ADD_ASSET, values)\n      .then((response) => {\n        console.log(response.data)\n        addAsset(response.data)\n        message.success('Added!')\n        form.resetFields()\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n        message.error('Failed to add')\n      })\n  }\n  const onFinishFailedArea = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n    message.warning('Please fill mandatory fields')\n  }\n  return (\n    <Layout.Content>\n      <Row justify=\"center\" gutter={[0, 0]}>\n        <Form\n          {...layout}\n          name=\"basic\"\n          form={form}\n          initialValues={{ assetStatus: { assetStatusId: 1 } }}\n          onFinish={onFinishArea}\n          onFinishFailed={onFinishFailedArea}\n          autoComplete=\"false\"\n        >\n          <Form.Item\n            colon={false}\n            label=\"Flat Name/Number\"\n            name=\"assetNumber\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the Flat name'\n              }\n            ]}\n          >\n            <Input placeholder=\"Flat name\" />\n          </Form.Item>\n\n          <Form.Item\n            colon={false}\n            label=\"Property Size (sqft)\"\n            name=\"assetDimen\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the size'\n              }\n            ]}\n          >\n            <Input placeholder=\"Property Size\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Property Value (sqft)\"\n            name=\"assetValue\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the value'\n              }\n            ]}\n          >\n            <Input placeholder=\"Property value\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Value unit\"\n            name=\"assetValueUnit\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the unit'\n              }\n            ]}\n          >\n            <Select placeholder=\"Select unit\">\n              <Option value=\"1\">SqFt</Option>\n              <Option value=\"2\">Flat</Option>\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"Booking Status\"\n            name={['assetStatus', 'assetStatusId']}\n            rules={[\n              {\n                required: true,\n                message: 'Please select status'\n              }\n            ]}\n          >\n            <Tabs\n              defaultActiveKey={cStatus + ''}\n              onChange={callback}\n              style={{ margin: 0 }}\n            >\n              <TabPane tab=\"Open\" key=\"1\"></TabPane>\n              <TabPane tab=\"Blocked\" key=\"2\"></TabPane>\n              <TabPane tab=\"Booked\" key=\"3\"></TabPane>\n            </Tabs>\n          </Form.Item>\n\n          <Form.Item colon={false} label=\"Property Facing\" name=\"assetFacing\">\n            <Input placeholder=\"Property facing\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n              Save\n            </Button>\n            <Button\n              disabled={isLoading}\n              htmlType=\"button\"\n              onClick={() => {\n                form.resetFields()\n              }}\n              style={{ margin: '0 8px' }}\n            >\n              Cancel\n            </Button>\n          </Form.Item>\n        </Form>\n      </Row>\n    </Layout.Content>\n  )\n}\n\nexport { FlatForm }\n","/* eslint-disable no-unused-expressions */\nimport React, { useState, useEffect } from 'react'\nimport { Row, Button, Input, message, Form, Layout, Tabs, Select } from 'antd'\nimport constants from '../../constants'\nimport rest from 'services/http'\nimport { useStoreActions } from 'easy-peasy'\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n}\nconst { TabPane } = Tabs\nconst { Option } = Select\nconst FlatEditForm = (props) => {\n  const { flat, status, onSuccess } = props\n  const [isLoading, setLoading] = useState(false)\n  const [cStatus, setCStatus] = useState(status)\n  const [valueUnit, setValueUnit] = useState('1')\n  const [form] = Form.useForm()\n  const updateAsset = useStoreActions((state) => state.assets.updateAsset)\n  useEffect(() => {\n    setCStatus(status)\n    setValueUnit(flat.assetValueUnit)\n  }, [])\n\n  function callback(key) {\n    setCStatus(key)\n  }\n  const onFinishArea = (values) => {\n    const data = { ...values }\n    data.assetId = flat.assetId\n    data.assetGroupId = flat.assetGroupId\n    data.assetStatus = {\n      assetStatusId: values.bookingStatus\n    }\n    // eslint-disable-next-line no-unused-expressions\n    setLoading(true)\n    rest\n      .post(constants.URL.ADD_ASSET, data)\n      .then((response) => {\n        updateAsset(response.data)\n        message.success('Updated!')\n        onSuccess()\n        setLoading(false)\n      })\n      .catch((error) => {\n        console.log(error)\n        setLoading(false)\n        message.error('Update Failed')\n      })\n  }\n  const onFinishFailedArea = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n    message.warning('Please fill mandatory fields')\n  }\n  return (\n    <Layout.Content>\n      <Row justify=\"center\" gutter={[0, 0]}>\n        <Form\n          {...layout}\n          name=\"basic\"\n          form={form}\n          initialValues={{\n            bookingStatus: cStatus,\n            assetNumber: flat.assetNumber,\n            assetDimen: flat.assetDimen,\n            assetValue: flat.assetValue,\n            assetValueUnit: valueUnit,\n            assetFacing: flat.assetFacing\n          }}\n          onFinish={onFinishArea}\n          onFinishFailed={onFinishFailedArea}\n          autoComplete=\"false\"\n        >\n          <Form.Item\n            colon={false}\n            label=\"Flat Name/Number\"\n            name=\"assetNumber\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the Flat name'\n              }\n            ]}\n          >\n            <Input placeholder=\"Flat name\" />\n          </Form.Item>\n\n          <Form.Item\n            colon={false}\n            label=\"Property Size (sqft)\"\n            name=\"assetDimen\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the size'\n              }\n            ]}\n          >\n            <Input placeholder=\"Property Size\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Property Value\"\n            name=\"assetValue\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the value'\n              }\n            ]}\n          >\n            <Input placeholder=\"Property value\" />\n          </Form.Item>\n          <Form.Item\n            colon={false}\n            label=\"Value unit\"\n            name=\"assetValueUnit\"\n            rules={[\n              {\n                required: true,\n                message: 'Please enter the unit'\n              }\n            ]}\n          >\n            <Select defaultValue={valueUnit}>\n              <Option value=\"1\">SqFt</Option>\n              <Option value=\"2\">Flat</Option>\n            </Select>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Booking Status\"\n            name=\"bookingStatus\"\n            rules={[\n              {\n                required: true,\n                message: 'Please select status'\n              }\n            ]}\n          >\n            {/* <Radio.Group buttonStyle=\"solid\" defaultValue={cStatus}>\n              <Radio.Button value=\"1\">Open</Radio.Button>\n              <Radio.Button value=\"2\">Booked</Radio.Button>\n              <Radio.Button value=\"3\">Blocked</Radio.Button>\n            </Radio.Group> */}\n            <Tabs\n              defaultActiveKey={cStatus + ''}\n              onChange={callback}\n              style={{ margin: 0 }}\n            >\n              <TabPane tab=\"Open\" key=\"1\"></TabPane>\n              <TabPane tab=\"Blocked\" key=\"2\"></TabPane>\n              <TabPane tab=\"Booked\" key=\"3\"></TabPane>\n            </Tabs>\n          </Form.Item>\n\n          <Form.Item colon={false} label=\"Property Facing\" name=\"assetFacing\">\n            <Input placeholder=\"Property facing\" />\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n              Update\n            </Button>\n            <Button\n              disabled={isLoading}\n              htmlType=\"button\"\n              onClick={() => {\n                onSuccess()\n              }}\n              style={{ margin: '0 8px' }}\n            >\n              Cancel\n            </Button>\n          </Form.Item>\n        </Form>\n      </Row>\n    </Layout.Content>\n  )\n}\n\nexport { FlatEditForm }\n","import React from 'react'\nimport { Button } from 'antd'\n\nconst FileUpload = (props) => {\n  const hiddenFileInput = React.useRef(null)\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click()\n  }\n  const handleChange = (event) => {\n    const fileUploaded = event.target.files[0]\n    props.handleFile(fileUploaded)\n  }\n  return (\n    <>\n      <Button onClick={handleClick}>Upload Document</Button>\n      <input\n        type=\"file\"\n        ref={hiddenFileInput}\n        onChange={handleChange}\n        style={{ display: 'none' }}\n      />\n    </>\n  )\n}\nexport default FileUpload\n","import S3 from 'react-aws-s3'\n\nconst config = {\n  bucketName: 'plot-crm',\n  dirName: 'media' /* optional */,\n  region: 'ap-south-1',\n  accessKeyId: 'AKIA26O2SOMH6ERMM445',\n  secretAccessKey: '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'\n}\n\nexport const s3 = new S3(config)\n","/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react'\nimport {\n  PageHeader,\n  Button,\n  Layout,\n  Modal,\n  message,\n  Carousel,\n  Divider\n} from 'antd'\nimport '../styles/agent-overall.css'\n\nimport FileUpload from './FileUpload'\nimport { s3 } from 'utils/s3'\nimport rest from 'services/http'\n// import constants from 'constants'\n\nimport constants from '../constants'\nconst { Header } = Layout\nconst SubNavProperty = (props) => {\n  const { group } = props\n  const [loading, setLoading] = useState(false)\n  const [successFiles, setSuccessFiles] = useState([])\n  const [showUploadModal, setShowUploadModal] = useState(false)\n  const onClickUpload = () => {\n    rest\n      .get(constants.URL.LIST_GROUP_IMAGE + group.assetGroupId)\n      .then((res) => {\n        setLoading(false)\n        console.log(res)\n        setSuccessFiles(res.data)\n        setShowUploadModal(true)\n      })\n      .catch((err) => {\n        setLoading(false)\n        console.error(err)\n        message.error('Upload Error')\n      })\n  }\n  // const onOkUpload = (uploaddocrequest) => {\n  //   setLoading(true)\n  //   rest\n  //     .post(constants.URL.ADD_IMAGE_TO_ASSET_GROUP, uploaddocrequest)\n  //     .then((res) => {\n  //       setLoading(false)\n  //       setShowUploadModal(false)\n  //     })\n  //     .catch((err) => {\n  //       setLoading(false)\n  //       console.error(err)\n  //       message.error('Upload Error')\n  //     })\n  //   setShowUploadModal(false)\n  // }\n  const onCancelUpload = () => {\n    setShowUploadModal(false)\n  }\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\n    if (!isJpgOrPng) {\n      message.error('You can only upload JPG/PNG file!')\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2\n    if (!isLt2M) {\n      message.error('Image must smaller than 2MB!')\n    }\n    return isJpgOrPng && isLt2M\n  }\n  const uploadToS3 = (e) => {\n    console.log('In file uplo')\n    var valid = beforeUpload(e)\n    if (!valid) {\n      return false\n    }\n    const fname = new Date().getTime()\n    setLoading(true)\n    s3.uploadFile(e, fname)\n      .then((response) => {\n        console.log(response)\n        var uploaddocrequest = {\n          assetGroupId: group.assetGroupId,\n          docTypeId: 2,\n          docurl: response.location\n        }\n        // setSuccessFiles([...successFiles, response])\n        // console.log(successFiles);\n        rest\n          .post(constants.URL.ADD_IMAGE_TO_ASSET_GROUP, uploaddocrequest)\n          .then((res) => {\n            setLoading(false)\n            message.success('Uploaded!')\n            successFiles.push(res.data)\n            setShowUploadModal(false)\n          })\n          .catch((err) => {\n            setLoading(false)\n            console.error(err)\n            message.error('Upload Error')\n          })\n        setShowUploadModal(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        message.error('Upload failed!')\n      })\n  }\n  return (\n    <div>\n      <Header style={{ padding: '2rem' }}></Header>\n      <PageHeader\n        className=\"site-page-subheader\"\n        ghost={true}\n        onBack={() => window.history.back()}\n        title=\"Back\"\n        extra={[\n          <Button key=\"1\" onClick={() => onClickUpload()}>\n            Documents\n          </Button>\n        ]}\n      ></PageHeader>\n      <Modal\n        closable={true}\n        onCancel={onCancelUpload}\n        width={800}\n        height={800}\n        title=\"Upload Images\"\n        visible={showUploadModal}\n        footer={null}\n      >\n        <Carousel autoplay>\n          {successFiles.map((file, index) => {\n            return (\n              <input\n                key={index}\n                height={450}\n                type=\"image\"\n                alt=\"document\"\n                src={file.docurl}\n              ></input>\n            )\n          })}\n        </Carousel>\n        <Divider dashed>Or</Divider>\n        <div style={{ textAlign: 'center' }}>\n          <FileUpload handleFile={uploadToS3} />\n        </div>\n      </Modal>\n    </div>\n  )\n}\n\nexport { SubNavProperty }\n","import React, { useEffect, useState } from 'react'\nimport { Layout, Row, Col } from 'antd'\nimport HeaderBar from '../../components/HeaderBar'\nimport { useHistory } from 'react-router-dom'\nimport { FlatLists } from '../../components/Property/FlatLists'\nimport '../../styles/flat.css'\nimport { FlatForm } from '../../components/Property/FlatForm'\nimport { FlatEditForm } from '../../components/Property/FlatEditForm'\nimport { SubNavProperty } from 'components/SubNavProperty'\n\nconst Property = (props) => {\n  const history = useHistory()\n  const group = history.location.groupDetails\n  const [flatForEdit, setFlatForEdit] = useState(null)\n\n  const onFlatClick = (flat) => {\n    setFlatForEdit(null)\n    setFlatForEdit(flat)\n  }\n  const clearEdit = () => {\n    setFlatForEdit(null)\n  }\n  useEffect(() => {\n    if (group === undefined) history.goBack()\n  }, [])\n  return (\n    <>\n      <HeaderBar drawer={false}>\n        <SubNavProperty group={group}></SubNavProperty>\n        <Layout.Content id=\"lead-section\" style={{ padding: '1rem' }}>\n          <Row gutter={[16, 16]}>\n            <Col span=\"17\" className=\"flat-card-outline\">\n              <FlatLists group={group} onFlatClick={onFlatClick} />\n            </Col>\n            <Col span=\"6\" className=\"flat-card-outline\">\n              {!flatForEdit && <FlatForm group={group} />}\n              {flatForEdit && (\n                <FlatEditForm\n                  group={group}\n                  flat={flatForEdit}\n                  status={flatForEdit.assetStatus.assetStatusId}\n                  onSuccess={clearEdit}\n                ></FlatEditForm>\n              )}\n            </Col>\n          </Row>\n        </Layout.Content>\n      </HeaderBar>\n    </>\n  )\n}\n\nProperty.propTypes = {}\n\nexport { Property }\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useState } from 'react'\nimport { Table } from 'antd'\nimport { useStoreState, useStoreActions } from 'easy-peasy'\nconst columns = [\n  {\n    title: 'Name',\n    width: 200,\n    // eslint-disable-next-line react/display-name\n    render: (asset) => (\n      <span style={{ color: '#000000a6', fontWeight: 'bold' }}>\n        {asset.assetNumber}\n      </span>\n    )\n  },\n  {\n    title: 'Flat Value',\n    width: 150,\n    render: (asset) => asset.assetValue\n  },\n  {\n    title: 'Flat Dimension',\n    width: 200,\n    // eslint-disable-next-line react/display-name\n    render: (asset) => asset.assetDimen\n  },\n  {\n    title: 'Flat Facing',\n    width: 200,\n    // eslint-disable-next-line react/display-name\n    render: (asset) => (asset.assetFacing ? asset.assetFacing : '-')\n  },\n\n  {\n    title: 'Flat Status',\n    width: 200,\n    render: (asset) => (\n      <span style={{ color: '#4c46a7', fontWeight: 'bold' }}>\n        {asset.assetStatus.assetStatus}\n      </span>\n    )\n  }\n  //   {\n  //     title: 'Action',\n  //     dataIndex: '',\n  //     // eslint-disable-next-line react/display-name\n  //     render: (agent) => (\n  //       <span>\n  //         <a>Add Call</a>\n  //       </span>\n  //     )\n  //   }\n]\nconst tableColumns = columns.map((item, idx) => ({\n  ...item,\n  ellipsis: true,\n  key: idx,\n  className: 't-head'\n}))\n\nconst FlatListTable = (props) => {\n  const [loading, setLoading] = useState(false)\n  const getAssetById = useStoreActions((actions) => actions.assets.getAssetById)\n  const assetDetails = useStoreState((state) => state.assets.assetDetails)\n  useEffect(() => {\n    const data = {\n      id: props.id,\n      callback: () => {\n        setLoading(false)\n      }\n    }\n    // Update the document title using the browser API\n    console.log('::LIST Assets Called::')\n    setLoading(true)\n    getAssetById(data)\n  }, [props.id])\n  return (\n    <div>\n      <Table\n        columns={tableColumns}\n        size=\"middle\"\n        loading={loading}\n        dataSource={assetDetails}\n        pagination={{ pageSize: 8 }}\n      ></Table>\n    </div>\n  )\n}\n\nexport { FlatListTable }\n","import React, { useState, useEffect } from 'react'\nimport HeaderBar from '../../components/HeaderBar'\nimport { Row, Spin, Select } from 'antd'\nimport { FlatListTable } from '../../components/FlatListTable'\nimport { useStoreActions, useStoreState } from 'easy-peasy'\nconst { Option } = Select\nconst AreaList = (props) => {\n  const [selectedId, setSelectedId] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const getAssetGroups = useStoreActions(\n    (actions) => actions.assets.getAssetGroups\n  )\n  const assetGroups = useStoreState((state) => state.assets.assetGroups)\n\n  function handleChange(id) {\n    setSelectedId(id)\n  }\n  useEffect(() => {\n    // Update the document title using the browser API\n    console.log('::LIST Assets Called::')\n    setLoading(true)\n    getAssetGroups(() => {\n      setLoading(false)\n    })\n  }, [])\n  return (\n    <HeaderBar>\n      <Row gutter={[8, 8]}>\n        <h5\n          style={{\n            fontFamily: 'Lato',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            color: '#150e4f'\n          }}\n        >\n          All Flats\n        </h5>\n        <br></br>\n      </Row>\n      <Spin spinning={loading}>\n        <Select\n          style={{ width: 120 }}\n          onChange={handleChange}\n          placeholder=\"Select Area\"\n        >\n          {assetGroups &&\n            assetGroups.map((group, index) => {\n              return (\n                <Option key={index} value={group.assetGroupId}>\n                  {group.assetGroupName}\n                </Option>\n              )\n            })}\n        </Select>\n      </Spin>\n      <br></br>\n      <FlatListTable id={selectedId} />\n    </HeaderBar>\n  )\n}\n\nexport { AreaList }\n","import React from 'react'\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom'\nimport { StoreProvider, createStore } from 'easy-peasy'\nimport models from './models'\nimport './App.css'\nimport AdminHome from './screens/admin/Home'\nimport OverallProductReport from './screens/admin/OverallProductReport'\nimport { AddPlotArea } from './screens/admin/AddPlotArea'\nimport { AgentHome } from './screens/agent/Home'\nimport { OverAll } from './screens/agent/OverAll'\nimport AddLead from 'screens/agent/AddLead'\nimport { LeadList } from 'screens/agent/LeadList'\nimport LoginForm from 'screens/Login'\nimport PrivateRoute from 'screens/auth/PrivateRoute'\nimport { Property } from 'screens/admin/Property'\nimport { AreaList } from 'screens/agent/AreaList'\n// import { Server, Model } from 'miragejs'\n\n// const leaddata = []\n// for (let i = 0; i < 35; i++) {\n//   leaddata.push({\n//     key: i,\n//     name: `Paul walker ${i}`,\n//     email: `Paulwalker${i}@gmail.com`,\n//     contact_number: '1234567890',\n//     next_schedule: '10:30AM',\n//     location: 'madurai',\n//     intrested_plots:\n//       i % i === 0\n//         ? ['P124', 'P435', 'G343']\n//         : ['P124', 'P435', 'G343', 'P124', 'P435', 'P124', 'P435'],\n//     score_summary: ['happy', 'sad', 'okay']\n//   })\n// }\n\n// eslint-disable-next-line no-new\n// new Server({\n//   models: {\n//     today_leads: Model,\n//     movies: Model,\n//     admin_messages: Model\n//   },\n//   seeds (server) {\n//     server.db.loadData({\n//       movies: [\n//         { title: 'Interstellar' },\n//         { title: 'Inception' },\n//         { title: 'Dunkirk' }\n//       ],\n//       admin_messages: [\n//         { message: 'hello new plot added on madurai', createdAt: new Date() },\n//         { message: 'hello new plot added on chennai', createdAt: new Date() }\n//       ],\n//       today_leads: leaddata\n//     })\n//   },\n//   routes () {\n//     this.namespace = '/api'\n//     this.get('/movies', (schema, request) => {\n//       return schema.movies.all()\n//     })\n//     this.get('/admin_messages', (schema, request) => {\n//       return schema.db.admin_messages\n//     })\n//     this.get('/users', (schema, request) => {\n//       return ['Deepan', 'Aswath', 'Gunalan', 'Krishnaveni']\n//     })\n\n//     this.get('/movies/:id', (schema, request) => {\n//       const id = request.params.id\n\n//       return schema.movies.find(id)\n//     })\n\n//     this.post('/movies', (schema, request) => {\n//       const attrs = JSON.parse(request.requestBody)\n\n//       return schema.movies.create(attrs)\n//     })\n\n//     this.patch('/movies/:id', (schema, request) => {\n//       const newAttrs = JSON.parse(request.requestBody)\n//       const id = request.params.id\n//       const movie = schema.movies.find(id)\n\n//       return movie.update(newAttrs)\n//     })\n\n//     this.delete('/movies/:id', (schema, request) => {\n//       const id = request.params.id\n\n//       return schema.movies.find(id).destroy()\n//     })\n\n//     this.get('/today_leads', (schema, request) => {\n//       return schema.db.today_leads\n//     })\n//   }\n\n// })\n\nconst storeModel = createStore(models)\n\nfunction AppRouter() {\n  return (\n    <>\n      <Route exact path=\"/\" component={LoginForm}></Route>\n      <Route exact path=\"/login\" component={LoginForm}></Route>\n\n      <PrivateRoute\n        component={AddPlotArea}\n        path=\"/admin/add-plot-area\"\n        exact\n        userRole=\"1\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={AgentHome}\n        path=\"/agent\"\n        exact\n        userRole=\"2\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={LeadList}\n        path=\"/agent/leads\"\n        exact\n        userRole=\"2\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={OverAll}\n        path=\"/agent/overall\"\n        exact\n        userRole=\"2\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={AddLead}\n        path=\"/agent/add-lead\"\n        exact\n        userRole=\"2\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={AreaList}\n        path=\"/agent/area-list\"\n        exact\n        userRole=\"2\"\n      ></PrivateRoute>\n\n      <PrivateRoute\n        component={AdminHome}\n        path=\"/admin\"\n        exact\n        userRole=\"1\"\n      ></PrivateRoute>\n\n      <PrivateRoute\n        component={Property}\n        path=\"/admin/property\"\n        exact\n        userRole=\"1\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={OverallProductReport}\n        path=\"/admin/overall-product-report\"\n        exact\n        userRole=\"1\"\n      ></PrivateRoute>\n      <PrivateRoute\n        component={AddPlotArea}\n        path=\"/admin/add-plot-area\"\n        exact\n        userRole=\"1\"\n      ></PrivateRoute>\n      <Route path=\"*\" render={() => <Redirect to=\"/login\"></Redirect>}></Route>\n    </>\n  )\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <StoreProvider store={storeModel}>\n        <AppRouter />\n      </StoreProvider>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}